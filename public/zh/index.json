[{"content":" 从入门到踩坑到从坑里爬起来！\n安装 安装 Hugo：安装 Hugo 需要利用一个包管理工具。对于 MacOS 系统 Hugo 可以直接用 Homebrew 来安装，打开终端输入 brew install hugo 安装 PaperMod：根据 PaperMod 的 官方文档 配置。 文件夹管理 archetypes：不用管 asset：自定义的 CSS 和 JavaScript content：用于放博客内容 data：不用管 layouts：自定义的 HTML public：项目导出文件 - 用于静态网页部署 static：存放图片 themes：主题 - PaperMod 进入 themes/PaperMod 则是 PaperMod 的相关代码，比较主要的目录有：\nassets：PaperMod 的 CSS 和 JavaScript 代码 layouts：PaperMod 的 HTML 自定义博文目录 content 里每个文件夹内都可以添加一个 _index.md 文件，该文件里面可以加 Front Matter 自定义（多语言）标题，如：\n--- hidemeta: true title: 博客 --- 初始项目文件夹结构如下：\n. ├── config.yml ├── content/ │ ├── archives.md │ ├── search.md │ └── posts/ ├── static/ │ ├── img/ │ └── ... └── themes └── PaperMod Config.yml Sulv’s Blog ：hugo博客搭建 | PaperMod主题 PaperMod 官方文档 多语言 config.yml 设置 如果我们想要使用多语言（中英为例），就需要在 content 文件夹下准备两个文件夹，例如 Chinese 和 English ，一个放中文，另一个放英文。\n在 config.yml 中需要做以下修改：\ndefaultContentLanguage: en defaultContentLanguageInSubdir: true languages: en: languageName: \u0026#34;English\u0026#34; contentDir: content/English zh: languageName: \u0026#34;中文\u0026#34; contentDir: content/Chinese 双语双模式 config.yml 设置 一开始照本宣科做中英一式两份的个人网站，后来随着 扩展 友链、多读多看，加之自己在英工作，逐渐调整了个站中英页面的各自侧重。\n英文页面 有求职相关，主页保持 portfolio 的简洁， 选用了 Profile Mode：\ndefaultContentLanguage: en # 默认语言 defaultContentLanguageInSubdir: true # 默认语言是否放在子目录中 languages: en: languageName: English languageCode: en contentDir: content/English menu: main: - identifier: about name: About url: /en/about/ weight: 10 - identifier: project name: Project url: /en/project/ weight: 20 - identifier: resume name: Resume url: /en/resume.pdf weight: 30 - identifier: blog name: Blog url: /en/blog/ weight: 40 - identifier: tags name: 🕹️ url: /en/tags/ weight: 50 - identifier: search name: Search url: /en/search/ weight: 60 params: profileMode: enabled: true title: Yunyi Tang subtitle: Little squirrel Hopping around imageUrl: \u0026#34;img/Avatar.png\u0026#34; imageWidth: 150 imageHeight: 150 buttons: - name: Project url: /en/project/ - name: Resume url: /en/resume.pdf - name: Log url: /en/blog/tech/log/ socialIcons: - name: github url: \u0026#34;https://github.com/yunyit\u0026#34; - name: linkedin url: \u0026#34;https://www.linkedin.com/in/yunyitang820/\u0026#34; - name: instagram url: \u0026#34;https://www.instagram.com/yunyi_cam/\u0026#34; - name: goodreads url: \u0026#34;https://www.goodreads.com/user/show/161105203-yunyi-tang\u0026#34; - name: email url: \u0026#34;mailto:yunyi.tang.820@gmail.com\u0026#34; 中文页面 则更侧重博客输出，魔改了 Home-Info Mode：\ndefaultContentLanguage: en # 默认语言 defaultContentLanguageInSubdir: true # 默认语言是否放在子目录中 languages: en: # 参照上节 zh: languageName: 中文 languageCode: zh contentDir: content/Chinese menu: main: - identifier: about name: 关于 url: /zh/about/ weight: 10 - identifier: log name: 建站 url: /zh/log/ weight: 20 - identifier: blog name: 博客 url: /zh/blog/ weight: 30 - identifier: links name: 友链 url: /zh/links/ weight: 40 - identifier: tags name: 🕹️ url: /zh/tags/ weight: 50 - identifier: search name: 搜索 url: /zh/search/ weight: 60 - identifier: travellings name: 开往 url: https://www.travellings.cn/go.html weight: 70 params: homeInfoParams: enabled: true Title: Yunyi\u0026#39;s Blog Content: const desc = \u0026#34;Little squirrel Hopping around\u0026#34;; imageUrl: \u0026#34;img/Avatar.png\u0026#34; imageWidth: 110 imageHeight: 110 socialIcons: - name: github url: \u0026#34;https://github.com/yunyit\u0026#34; - name: instagram url: \u0026#34;https://www.instagram.com/yunyi_cam/\u0026#34; - name: goodreads url: \u0026#34;https://www.goodreads.com/user/show/161105203-yunyi-tang\u0026#34; - name: email url: \u0026#34;mailto:yunyi.tang.820@gmail.com\u0026#34; 创建文章 在终端输入 hugo new 文章名称.md，在 content 文件夹下创建 markdown 文件； 但我懒，直接在对应 content 文件夹下新建 文章名称.md； 自定义文章 Front Matter 文章头部信息可以修改这篇文章的属性，建议按照 Sulv’s Blog ：hugo博客搭建 | PaperMod主题 进行配置。\n我的 Front Matter 如下，在 PaperMod 默认基础上稍加修改，供参考:\n--- Tags: # 标签数量丰俭由人 - PaperMod - Hugo - 建站 TocOpen: true author: - Yunyi comments: true cover: alt: \u0026#34;\u0026#34; caption: \u0026#34;\u0026#34; image: \u0026#34;\u0026#34; relative: false date: \u0026#34;2024-01-15\u0026#34; description: \u0026#34;\u0026#34; # 为页头简介，省略 disableShare: true draft: false # 未发布时为 true hidemeta: false lastmod: \u0026#34;2024-01-15\u0026#34; showToc: true showbreadcrumbs: true slug: \u0026#34;\u0026#34; title: Hugo + PaperMod 自定义 Homeinfo 中英博客搭建 weight: null # 若置顶则为对应数字 --- 本地预览 在终端输入 hugo server -D 启动。 启动服务器后，打开浏览器，本地预览网址为 localhost:1313。 网站部署 Github Pages 发布静态博客 -\n优点：\n仅需一个 GitHub 账号和简单配置即可将静态博客发布到 GitHub Pages； 没有维护的时间成本, 可以将精力更多的放到博客内容本身上去； 无需备案； 无需 SSL 证书； 缺点：\n访问速度较慢 访问速度较慢 访问速度较慢 自定义页面布局 HTML/CSS 参考 PaperMod官方文档：\n通过 Hugo 的查找顺序，您可以覆盖主题的任何部分。比如，自定义 footer，只需复制列表模板即可：\nyour-site/themes/papermod/layouts/partials/footer.html 然后粘贴到自己的 layout 文件夹下：\nyour-site/layouts/partials/footer.html 然后就可以对 footer 进行任何修改了。 Hugo 创建网站时，将使用 your-site/layouts/partials/ 里的 footer.html，而不是 your-site/themes/papermod/layouts/partials/ 里的 footer.html。\ngit pull 更新 your-site/themes/papermod/ 之后，记得也更新对应的自定义 html css，眼瞎 debug 体会！\nHome-Info 主页添加头像 修改在 layouts/partials/home_info.html：\n{{- with site.Params.homeInfoParams }} \u0026lt;article class=\u0026#34;first-entry home-info\u0026#34;\u0026gt; {{- with site.Params.homeInfoParams }} \u0026lt;div class=\u0026#34;profile_inner\u0026#34;\u0026gt; {{- if .imageUrl -}} {{- $img := \u0026#34;\u0026#34; }} {{- if not (urls.Parse .imageUrl).IsAbs }} {{- $img = resources.Get .imageUrl }} {{- end }} {{- if $img }} {{- $processableFormats := (slice \u0026#34;jpg\u0026#34; \u0026#34;jpeg\u0026#34; \u0026#34;png\u0026#34; \u0026#34;tif\u0026#34; \u0026#34;bmp\u0026#34; \u0026#34;gif\u0026#34;) -}} {{- if hugo.IsExtended -}} {{- $processableFormats = $processableFormats | append \u0026#34;webp\u0026#34; -}} {{- end -}} {{- $prod := (hugo.IsProduction | or (eq site.Params.env \u0026#34;production\u0026#34;)) }} {{- if and (in $processableFormats $img.MediaType.SubType) (eq $prod true)}} {{- if (not (and (not .imageHeight) (not .imageWidth))) }} {{- $img = $img.Resize (printf \u0026#34;%dx%d\u0026#34; .imageWidth .imageHeight) }} {{- else if .imageHeight }} {{- $img = $img.Resize (printf \u0026#34;x%d\u0026#34; .imageHeight) }} {{ else if .imageWidth }} {{- $img = $img.Resize (printf \u0026#34;%dx\u0026#34; .imageWidth) }} {{ else }} {{- $img = $img.Resize \u0026#34;50x50\u0026#34; }} {{- end }} {{- end }} \u0026lt;a href=\u0026#34;https://www.yunyitang.me/img/Avatar.png\u0026#34; \u0026gt;\u0026lt;img id=\u0026#34;home-info-avatar\u0026#34; draggable=\u0026#34;false\u0026#34; src=\u0026#34;{{ $img.Permalink }}\u0026#34; alt=\u0026#34;{{ .imageTitle | default \u0026#34;profile image\u0026#34; }}\u0026#34; title=\u0026#34;{{ .imageTitle }}\u0026#34; height=\u0026#34;{{ .imageHeight | default 50 }}\u0026#34; width=\u0026#34;{{ .imageWidth | default 100 }}\u0026#34; style=\u0026#34;border-radius: 50%!important; background-color: #fff; padding: 2px;\u0026#34; /\u0026gt;\u0026lt;/a\u0026gt; {{- else }} \u0026lt;a href=\u0026#34;https://www.yunyitang.me/img/Avatar.png\u0026#34; \u0026gt;\u0026lt;img id=\u0026#34;home-info-avatar\u0026#34; draggable=\u0026#34;false\u0026#34; src=\u0026#34;{{ .imageUrl | absURL }}\u0026#34; alt=\u0026#34;{{ .imageTitle | default \u0026#34;profile image\u0026#34; }}\u0026#34; title=\u0026#34;{{ .imageTitle }}\u0026#34; height=\u0026#34;{{ .imageHeight | default 50 }}\u0026#34; width=\u0026#34;{{ .imageWidth | default 100 }}\u0026#34; style=\u0026#34;border-radius: 50%!important; background-color: #fff; padding: 2px;\u0026#34; /\u0026gt;\u0026lt;/a\u0026gt; {{- end }} {{- end }} \u0026lt;/div\u0026gt; {{- end }} \u0026lt;!-- original codes --\u0026gt; \u0026lt;/article\u0026gt; {{- end -}} 自定义 hover 主要在 assets/css/common/header.css 中修改：\nHome 主页键 hover 为页面左上角的 Home 添加 hover：\n.logo a:hover { transition: 0.15s; color: grey; } 社交媒体 hover 以下为本人所标注的 5 个社交媒体标识的自定义颜色，选了各软件的主题色：\nsvg:hover { transition: 0.15s; } .social-icons a[href*=\u0026#34;github\u0026#34;]:hover svg { color: #333 !important; } .social-icons a[href*=\u0026#34;linkedin\u0026#34;]:hover svg { color: #0A66C2 !important; } .social-icons a[href*=\u0026#34;instagram\u0026#34;]:hover svg { color: #d62976 !important; } .social-icons a[href*=\u0026#34;goodreads\u0026#34;]:hover svg { color: #75420e !important; } .social-icons a[href^=\u0026#34;mailto\u0026#34;]:hover svg { color: #f2a60c !important; } 黑夜模式和白天模式的 hover #moon:hover { transition: 0.15s; color: #1772b4; } #sun:hover { transition: 0.15s; color: #f4a83a; } 主页 menu 中链接 hover #menu a:hover { transition: 0.15s; color: grey; } Profile mode 按钮 hover 在 /assets/css/common/profile-mode.css 中修改：\n.button:hover { -webkit-transform: scale(1.1); -moz-transform: scale(1.1); -ms-transform: scale(1.1); -o-transform: scale(1.1); /* box-shadow: 0 0 0 1px grey; */ transform: scale(1.1) translateZ(0) translate3d(0, 0, 0) rotate(0.01deg); } 目录栏目放侧边 Sulv’s Blog：Hugo博客目录放在侧边 | PaperMod主题\n修改字体 修改全局字体 在 Google Fonts 中查询开源字体，我目前的文章字体为 JetBrains Mono。Google Fonts 会生成 HTML 和 css ，将 HTML 插入到 layouts/partials/extend_head.html 中，将 CSS 插入到 assets/css/extended/blank.css：\nbody { font-family: \u0026#39;JetBrains Mono\u0026#39;, monospace; font-size: 1rem; line-height: 1.5; margin: 0; } 修改代码字体 与全局字体类似，区别为 CSS 代码插入 assets/css/extended/blank.css 的位置不同：\n.post-content pre, code { font-family: \u0026#39;JetBrains Mono\u0026#39;, monospace; font-size: 13; line-height: 1.2; max-height: 40rem; } 代码外观自定义 代码高亮 最近一次 更新，改用 Hugo 内置的 Chroma，CSS 文件位置更改为 assets/css/includes/chroma-styles.css。对应配置文件 config.yml 内容为：\nmarkup: markup.highlight: noclasses: false 配合本站的橙色系，我选择了 trac，并用 Hugo 安装：\nhugo gen chromastyles --style=trac \u0026gt; assets/css/includes/chroma-styles.css 其中，所有 #bb8844 配色更换为 陶瓷红 #E16723，配合本站的 超链接配色。assets/css/includes/chroma-mod.css 文件保持原设定，记得在 git pull 之后更新对应的 CSS 自定义文件夹就好。\n目前在 assets/css/extended/blank.css 的配置为：\n.post-content pre code , .post-content .highlight:not(table) , .post-content .highlight table { background: unset !important; background-color: var(--code-bg) !important; /* 兼容日夜显示模式 */ color: var(--secondary) !important; /* 兼容日夜显示模式 */ } 此更新的进度具体看这个 issue。\n代码边框圆角 在 /assets/css/common/post-single.css 中修改：\n.post-content .highlight pre { background-color: var(--theme) !important; margin: 0; } 修改链接颜色 参考 lvbibir\u0026rsquo;s Blog：Hello, hugo! ，我选择了 陶瓷红 #E16723 rgb(225, 103, 35)。\n\u0026lt;a href=\u0026#34;{{ .Destination | safeURL }}\u0026#34;{{ with .Title}} title=\u0026#34;{{ . }}\u0026#34;{{ end }}{{ if strings.HasPrefix .Destination \u0026#34;http\u0026#34; }} target=\u0026#34;_blank\u0026#34; rel=\u0026#34;noopener\u0026#34; style=\u0026#34;color:#E16723\u0026#34;;{{ end }}\u0026gt;{{ .Text | safeHTML }}\u0026lt;/a\u0026gt; 添加评论 一开始基于 MongoDB 和 Vercel 部署 twikoo 评论系统，后来更换为 Disqus：\nDisqus 在 Hugo 有内置选项，但我没有弄好，还是按照 官方文档 ，修改代码到 layouts/partials/comment.html：\n\u0026lt;div id=\u0026#34;disqus_thread\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;script\u0026gt; var disqus_config = function () { this.page.url = \u0026#34;https://www.yunyitang.me/\u0026#34;; // 域名 this.page.identifier = PAGE_IDENTIFIER; // 无需更改 (function() { // DON\u0026#39;T EDIT BELOW THIS LINE var d = document, s = d.createElement(\u0026#39;script\u0026#39;); s.src = \u0026#39;https://yunyitang-me.disqus.com/embed.js\u0026#39;; s.setAttribute(\u0026#39;data-timestamp\u0026#39;, +new Date()); (d.head || d.body).appendChild(s); })(); \u0026lt;/script\u0026gt; \u0026lt;noscript\u0026gt;Please enable JavaScript to view the \u0026lt;a href=\u0026#34;https://disqus.com/?ref_noscript\u0026#34;\u0026gt;comments powered by Disqus.\u0026lt;/a\u0026gt;\u0026lt;/noscript\u0026gt; 调用上述 Disqus 代码的位置：layouts/_default/single.html：\n\u0026lt;!-- other codes --\u0026gt; {{- if (.Param \u0026#34;comments\u0026#34;) }} {{ partial \u0026#34;comments.html\u0026#34; . }} {{- end }} \u0026lt;/article\u0026gt; {{- end }}{{/* end main */}} Shortcodes 扩展功能/插件 bilibili、YouTube、豆瓣阅读和电影卡片 Spotify Tags 标签云 Sulv\u0026rsquo;s Blog：Hugo博客添加标签云\n添加友链 Sulv’s Blog：Hugo博客添加友链\n流量统计 我使用了 umami 流量统计，并添加在页脚 footer 。\n在 layouts/partials/footer.html 中修改：\n{{- if not (.Param \u0026#34;hideFooter\u0026#34;) }} \u0026lt;footer class=\u0026#34;footer\u0026#34;\u0026gt; \u0026lt;!-- other codes --\u0026gt; \u0026lt;span\u0026gt; \u0026lt;a href=\u0026#34;https://analytics.eu.umami.is/share/mNvu6TLrju52UZ97/Yunyi\u0026#39;s%20Blog\u0026#34; rel=\u0026#34;noopener noreferrer\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;Analytics\u0026lt;/a\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;/footer\u0026gt; {{- end }} 知识共享协议 从 官方指南 选自适合自己的知识共享协议，并在 layouts/partials/footer.html 自定义 CC BY-NC-SA 4.0 页脚：\n{{- if not (.Param \u0026#34;hideFooter\u0026#34;) }} \u0026lt;footer class=\u0026#34;footer\u0026#34;\u0026gt; \u0026lt;!-- other codes --\u0026gt; \u0026lt;span xmlns:cc=\u0026#34;http://creativecommons.org/ns#\u0026#34; xmlns:dct=\u0026#34;http://purl.org/dc/terms/\u0026#34;\u0026gt; Licensed under \u0026lt;a href=\u0026#34;http://creativecommons.org/licenses/by-nc-sa/4.0/?ref=chooser-v1\u0026#34; target=\u0026#34;_blank\u0026#34; rel=\u0026#34;license noopener noreferrer\u0026#34; style=\u0026#34;display:inline-block;\u0026#34;\u0026gt;CC BY-NC-SA 4.0 \u0026gt;\u0026lt;/a\u0026gt;\u0026lt;/span\u0026gt; \u0026lt;span\u0026gt; \u0026lt;a href=\u0026#34;https://analytics.eu.umami.is/share/mNvu6TLrju52UZ97/Yunyi\u0026#39;s%20Blog\u0026#34; rel=\u0026#34;noopener noreferrer\u0026#34; target=\u0026#34;_blank\u0026#34;\u0026gt;Analytics\u0026lt;/a\u0026gt; \u0026lt;/span\u0026gt; \u0026lt;/footer\u0026gt; {{- end }} ","permalink":"https://www.yunyitang.me/zh/blog/tech/hugo-papermod/","summary":"从入门到踩坑到从坑里爬起来！ 安装 安装 Hugo：安装 Hugo 需要利用一个包管理工具。对于 MacOS 系统 Hugo 可以直接用 Homebrew 来安装，打开终端输入 brew install hugo 安装 Paper","title":"Hugo+PaperMod 博客搭建 Home-Info+Profile Mode"},{"content":" 认知始于 Markdown 文件，不知道终于哪儿。\n定义 YAML Ain\u0026rsquo;t a Markup Language / Yet Another Markup Language\n文件后缀：.yml 或 .yaml\n注释：井号 或 哈希符号 #\n结构：映射或列表，遵循层次结构，具体取决于缩进以及定义键值的方式。\n语法：\n大小写敏感； 使用缩进表示层级关系； 缩进时不允许使用 Tab 键，只允许使用空格； 缩进的空格数目不重要，只要相同层级的元素左侧对齐即可； 应用 配置文件 configuration files -\nYAML / JSON 相比 JSON，因为 YAML 有更好的可读性，对用户更友好，所以通常建议用 YAML 来编写配置文件，尽管它们在大多数情况下可以互换使用。\n数据类型 对象 mapping/hash/dictionary：键值对的集合； 数组 sequence/list：一组按次序排列的值；数组和对象可以构成复合结构； 纯量：最基本的，不可再分的值； 对象 对象的一组键值对，使用冒号结构表示。\nanimal: pets 转为 JavaScript 如下：\n{ animal: \u0026#39;pets\u0026#39; } Yaml 也允许另一种写法，将所有键值对写成一个行内对象。\nhash: { name: Steve, foo: bar } 转为 JavaScript 如下：\n{ hash: { name: \u0026#39;Steve\u0026#39;, foo: \u0026#39;bar\u0026#39; } } 数组 一组连词线开头的行，构成一个数组。\n- Cat - Dog - Goldfish 转为 JavaScript 如下：\n[ \u0026#39;Cat\u0026#39;, \u0026#39;Dog\u0026#39;, \u0026#39;Goldfish\u0026#39; ] 纯量 纯量是最基本的、不可再分的值。\n以下数据类型都属于 JavaScript 的纯量：\n字符串 布尔值 整数 浮点数 null：用 ~ 表示 时间 日期 复合结构 对象和数组可以结合使用，形成复合结构。\n示例 选自 Red Hat 的学生信息例子：\n#Comment: Student record #Describes some characteristics and preferences --- name: Martin D\u0026#39;vloper #key-value age: 26 hobbies: - painting #first list item - playing_music #second list item - cooking #third list item programming_languages: java: Intermediate python: Advanced javascript: Beginner favorite_food: - vegetables: tomatoes - fruits: citrics: oranges tropical: bananas nuts: peanuts sweets: raisins 使用 Python 的 PyYAML 库，可转化为：\n[ { \u0026#34;name\u0026#34;: \u0026#34;Martin D\u0026#39;vloper\u0026#34;, \u0026#34;age\u0026#34;: 26, \u0026#34;hobbies\u0026#34;: [\u0026#34;painting\u0026#34;, \u0026#34;playing_music\u0026#34;, \u0026#34;cooking\u0026#34;], \u0026#34;programming_languages\u0026#34;: { \u0026#34;java\u0026#34;: \u0026#34;Intermediate\u0026#34;, \u0026#34;python\u0026#34;: \u0026#34;Advanced\u0026#34;, \u0026#34;javascript\u0026#34;: \u0026#34;Beginner\u0026#34;, }, \u0026#34;favorite_food\u0026#34;: [ {\u0026#34;vegetables\u0026#34;: \u0026#34;tomatoes\u0026#34;}, { \u0026#34;fruits\u0026#34;: { \u0026#34;citrics\u0026#34;: \u0026#34;oranges\u0026#34;, \u0026#34;tropical\u0026#34;: \u0026#34;bananas\u0026#34;, \u0026#34;nuts\u0026#34;: \u0026#34;peanuts\u0026#34;, \u0026#34;sweets\u0026#34;: \u0026#34;raisins\u0026#34;, } }, ], } ] 相关阅读 Barney 的 yaml 语法 整理； 阮一峰 的 YAML 语言教程； YAML 1.2 规格； ","permalink":"https://www.yunyitang.me/zh/blog/tech/ymal/","summary":"认知始于 Markdown 文件，不知道终于哪儿。 定义 YAML Ain\u0026rsquo;t a Markup Language / Yet Another Markup Language 文件后缀：.yml 或 .yaml 注释：井号 或 哈希符号 # 结构：映射或列表，遵循层次结构，具体取决","title":"YAML"},{"content":" 在这个独立博客式微的时代，友情链接的意义是什么？\n和 Medium、简书之类的写作平台不同，每一个独立博客都是一个信息孤岛。我们没有类似「你可能喜欢其他人写的这些文章」的推荐机制，所以除了搜索引擎、社交网络引荐之外，我们应该还需要通过某种方法将这些信息孤岛连接起来：\n交换友情链接就是一种很棒的架桥方式。\n—— 摘自 PRIN BLOG\n平时整理博文的时候，也向 友链 的大家学习了不少。一一列在友链页面有些太臃肿了，所以单独整理在这页。\nObsidian 工作笔记 - RC 总结的 中文写作风格指南； Barney 的 yaml 语法 整理； 持续整理中，更多友链相关请看 这里 👋🏼\n","permalink":"https://www.yunyitang.me/zh/blog/tech/link-posts/","summary":"在这个独立博客式微的时代，友情链接的意义是什么？ 和 Medium、简书之类的写作平台不同，每一个独立博客都是一个信息孤岛。我们没有类似「你可能","title":"友链相关阅读"},{"content":"博客建设 2023 年底把博客从 Ghost 搬到了 Github Pages，动手照着教程 Hugo + PaperMod搭建技术博客 做了一个静态网页做博客，重心放在技术学习整理、以输出促输入、费曼学习法。\n一开始照本宣科做中英一式两份的个人网站，后来随着扩展友链、多读多看，加之自己在英工作，逐渐调整了个站中英页面的各自侧重：英文页面有求职相关，博客更新不及中文页面多，主页保持 portfolio 的简洁；中文页面则更侧重博客输出，主页的页头页尾也更丰富一点。\n在扩展 友链 的过程中，向各位大佬们也学习了很多，感受到了独立博客的丰富，受益于大家分享的真诚，并且越来越能体会阮一峰老师的话：\n”对我来说，博客首先是一种知识管理工具，其次才是传播工具。我的技术文章，主要用来整理我还不懂的知识。我只写那些我还没有完全掌握的东西，那些我精通的东西，往往没有动力写。炫耀从来不是我的动机，好奇才是。“\n工作变化和感受 今年最松一口气的变化，就是我的 硕士论文 终于通过了！从一开始读博的跌跌撞撞，到第一年审核不过的焦虑难受，再到之后转为研究型硕士项目的守得云开见月明，很感谢导师、家人和朋友们的支持和陪伴。拿到学位也保证了后续的签证申请，留英工作的计划也清晰了许多。\n科研之余的实习也有了不少进展，在 180DC 的数据科学项目进入到项目的第二阶段，去年的领队忙于毕业、把这轮项目的领队交给了我。虽然不比队里各位 Robotics 的博士生们技术精湛，但基于项目前一轮和客户交流的经验，加一些细心，算是把此项目收尾了。\n最意外的收获是开始了在 Zapmap 的数据兼职。从一开始比较打杂，到现在虽然也打杂、但更多参与公司会议了解业务动向、多到办公室和大家交流、旁观学习，甚至还去 Christmas Party 狠玩了一把，也算是把一个一开始的小机会利用到自己力所能及的最大值。虽说初创公司要看融资来决定下一步的人事变化，能否在现在合同结束后留下了全职工作还两说，但在 Zapmap 经历的、学习了解到的都对从本科开始就没有工作经历、一路读书到现在的我多有助益。\n技术成长 在导师提醒我“不能从一个硕士项目中只想着用尽学尽自己想要的技术/工具”之后，我放下了把 硕士论文 的数据分析做得花里胡哨的执念，只在完成本职（科研）之余，多接触、多自学、多尝试。但对于自己更倾向于数据分析、还是网站开发，一直没有很清晰的想法。\n有时候感觉像忙头苍蝇无方向，但有时又相信积少成多、前路会越来越明晰，也多亏能在 Zapmap 工作多感受体会，才不至于像考虑转硕那样焦躁茫然。而在秋天生活变故之后，我有意无意多着力用时于自己，加上少了担心毕业论文的压力，顺着技术博客做感觉还不错。\n今年计划完成度 连续两年年底都过得不易，也一直没什么“年度计划”。姑且回头看的话，今年过得确实比去年年底的悲观好多了，感到幸运的远多于感到遗憾的，也算是完成自己的期待吧！\n明年的全年计划 明年主要解决什么问题？有什么想做的？围绕生活、技术、工作：\n多出门徒步，开始尝试多日徒步； 多和家人朋友通话联络； 保持博客每月两篇以上的输出； 增加基础技术知识的学习和输出； 开始第一份全职工作； 相关阅读 各节标题参考了 冰冰大佬 前年的 2022年终总结，更多大家的 2023 年终总结可翻阅 此合集。\n","permalink":"https://www.yunyitang.me/zh/blog/life/2023/","summary":"博客建设 2023 年底把博客从 Ghost 搬到了 Github Pages，动手照着教程 Hugo + PaperMod搭建技术博客 做了一个静态网页做博客，重心放在技术学习整理、以输出","title":"2023 年终总结"},{"content":" 启用日期：2024-01-09\n应用场景：工作笔记\n自定义：荷叶绿 HEYELV #1A6840 RGB(26, 104, 64)；字体 JetBrains Mono\n常用功能属性 daily template interlink tags YAML 分类方法 标签：PARA + 工作内容\n1-projects 2-areas 3-resources 4-archives zapmap 同样的分类方法我也应用于系统便签本的归类。\n安装插件 插件 主要功能 相关阅读 Dataview 数据库查询 Dataview 中的 DQL 与 SQL 的区别 Natural Language Dates 通过自然语言生成日期 Perodic Dates 按日期单位汇总笔记 Smart Random Notes 随机挑选一篇笔记阅读 Templater 模版指令 Various Complements 自动补全 其他相关阅读 RC 总结的 中文写作风格指南。\n","permalink":"https://www.yunyitang.me/zh/blog/tech/obsedian/","summary":"启用日期：2024-01-09 应用场景：工作笔记 自定义：荷叶绿 HEYELV #1A6840 RGB(26, 104, 64)；字体 JetBrains Mono 常用功能属性 daily template interlink tags YAML 分类方法 标签：PARA + 工作内容","title":"Obsidian 工作笔记"},{"content":" 在实习公司的数据岗位还挺常用的。\n定义 JavaScript Object Notation -\n{ \u0026#34;key\u0026#34;: \u0026#34;value\u0026#34;, \u0026#34;key2\u0026#34;: \u0026#34;value2\u0026#34; } 网络传输中常使用的格式：以节省内存和传输所用的网络带宽\n{\u0026#34;key\u0026#34;:\u0026#34;value\u0026#34;,\u0026#34;key2\u0026#34;:\u0026#34;value2\u0026#34;} 数据类型 文本/字符串 Strings { \u0026#34;key\u0026#34;: \u0026#34;value\u0026#34; } 数字 Numbers { \u0026#34;key\u0026#34;: 123. 456 } 弱类型语言：没有长度限制 强类型语言：根据取数类型 对象 Objects { \u0026#34;key\u0026#34;: { \u0026#34;key2\u0026#34;: \u0026#34;value2\u0026#34;, \u0026#34;key3\u0026#34;: \u0026#34;value3\u0026#34; } } 数组 Arrays { \u0026#34;key\u0026#34;: [123, 456, 7.89]; //数字 \u0026#34;key2\u0026#34;: [\u0026#34;今天\u0026#34;, \u0026#34;天气\u0026#34;, \u0026#34;不错\u0026#34;]; //字符串 \u0026#34;key3\u0026#34;: [ { \u0026#34;name\u0026#34;: \u0026#34;0\u0026#34;, \u0026#34;age\u0026#34;: \u0026#34;1\u0026#34; },{ \u0026#34;name\u0026#34;: \u0026#34;a\u0026#34;, \u0026#34;age\u0026#34;: \u0026#34;2\u0026#34; },{ \u0026#34;name\u0026#34;: \u0026#34;b\u0026#34;, \u0026#34;age\u0026#34;: \u0026#34;3\u0026#34; } ] //对象 } null { \u0026#34;key\u0026#34;: null } 取值方式 根据不同编程语言具体不同： 相应 function 后加\nkey.key3 或\nkey[0].name 应用 广泛应用于前后端的数据交换； 配置文件的格式，如VS Code； 类似的其他数据交换格式 YMAL XML PROPERTIES \u0026hellip; JSON的优点 语法简单，易读易写； 简洁，易于计算机解析； ","permalink":"https://www.yunyitang.me/zh/blog/tech/json/","summary":"在实习公司的数据岗位还挺常用的。 定义 JavaScript Object Notation - { \u0026#34;key\u0026#34;: \u0026#34;value\u0026#34;, \u0026#34;key2\u0026#34;: \u0026#34;value2\u0026#34; } 网络传输中常使用的格式：以节省内存和传输所用的网络带宽 {\u0026#34;key\u0026#34;:\u0026#34;value\u0026#34;,\u0026#34;key2\u0026#34;:\u0026#34;value2\u0026#34;} 数据类型 文本/字符串 Strings { \u0026#34;key\u0026#34;: \u0026#34;value\u0026#34;","title":"JSON"},{"content":" 认知始于 Excel，不知道终于哪儿。\n介绍与应用 属性：用于匹配和操作文本的工具\n设计思想：用一种描述性的语言来给字符串定义一个规则，凡是符合规则的字符串，为“匹配”，反之，不“匹配”。\n应用场景：\n文本查找 文本替换 文本格式校验 \u0026hellip; 应用环境：大多数编程语言的标准库包含正则表达式的支持\nPython SQL Javascript Word, Excel\u0026hellip; 语法 普通字符 明确的关键字：在正则表达式中直接写即可\n文字字符：英文字母、中文、数字 符号：@ % _ 等等 特殊字符 一些有特殊含义的字符若要匹配，必须首先使字符\u0026quot;转义\u0026quot;，即将反斜杠字符 ``` 放在它们前面。\n特殊字符 描述 $ 匹配输入字符串的结尾位置 () 标记一个子表达式的开始和结束位置 * 匹配前面的子表达式零次或多次 + 匹配前面的子表达式一次或多次 [ 标记一个中括号表达式的开始 ? 匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。 \\ 将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符 ^ 匹配输入字符串的开始位置，除非在方括号表达式中使用，当该符号在方括号表达式中使用时，表示不接受该方括号表达式中的字符集合。 { 标记限定符表达式的开始 | 指明两项之间的一个选择 非打印字符 字符 描述 等效 \\cx 匹配由x指明的控制字符 \\f 匹配一个换页符 \\x0c 和 \\cL \\n 匹配一个换行符 \\x0a 和 \\cJ \\r 匹配一个回车符 \\x0d 和 \\cM \\s 匹配任何空白字符，包括空格、制表符、换页符等等。 \\f \\n \\r \\t \\v \\S 匹配任何非空白字符 ^ \\f \\n \\r \\t \\v \\t 匹配一个制表符 \\x09 和 \\cI \\v 匹配一个垂直制表符 \\x0b 和 \\cK 不需要记住，可用时查。\n字符集合 单个关键字的值范围，包含在一对 [] 中间。\n应用：\n明确某个字符的范围的模糊匹配 如果差异不仅仅在一个字符上，则不适合采用字符集合 -\u0026gt; 应采用子表达式 可以简化的连续值范围：使用 - 符号 字符集合为排除在外的值：使 ^ 符号 限定符、定位符 限定符 给前一个字符追加限定范围\n常用限定符 描述 * 前面的字符/子表达式出现0次或多次 + 前面的字符/子表达式出现1次或多次 # 前面的字符/子表达式出现0次或1次 {} 前面的字符/子表达式出现具体{}次 注意：前面为模糊匹配范围时，会出现“贪婪匹配”的问题 \u0026ndash; 默认情况下，正则表达式会匹配尽量多的字符 \u0026ndash; 可通过添加 ? 实现非贪婪匹配。\n定位符 标记匹配位置的元字符 - 只有4个：\n定位符 描述 ^ 字符串开始的位置 $ 字符串结尾的位置 \\b 单词边界 - 字符与空格间的位置 \\B 非单词边界 子表达式 内嵌的子正则表达式，包含在一对 () 中，可以看作是一个整体。\n与正则表达式语法相同； 允许子表达式内嵌套子表达式； 用 | 分割多个子表达式/多种情况； 可以标记子匹配项，如 ([a-z])\\1([a-z])\\2 匹配 aabb ... cczz； 子表达式的匹配结果会单独存储，如希望不存储，可以添加 ?:（在日常表达中不太常用）； 可作为预查匹配项/自定义的定位符； 省略符、修饰符 省略符 为了简化正则表达式的元字符，以 \\ 开头。\n字符 描述 等效 . 匹配除换行符（\\n、\\r）之外的任何单个字符 [^\\n\\r] \\d 匹配一个数字字符 [0-9] \\D 匹配一个非数字字符 [^0-9] \\s 匹配所有空白符，包括空格、制表符、换页符等。 [\\f\\n\\r\\t\\v] \\S 匹配所有非空白符 [^\\f\\n\\r\\t\\v] \\w 匹配一个字母、数字、下划线字符 [A-Za-z0-9_] \\W 匹配一个非字母、数字、下划线字符 [^A-Za-z0-9_] 每个省略符都有替代方案，所以不必强求记忆。\n修饰符 严格意义上不是正则表达式的一部分，是指定匹配策略的，可叠加使用。\n常规修饰符 描述 i ignore - 不区分大小写 g global - 全局匹配 m multi-line - 多行匹配 s 默认情况下的圆点 . 是匹配除换行符 \\n 之外的任何字符，加上 s 修饰符之后, . 中包含换行符 \\n。 某些正则表达式的代码库可能存在特别的修饰符。\n有些软件虽支持正则表达式搜索，但不一定开放修饰符的设置。\n记不住语法的解决方案 正则表达式元字符手册：Road To Coding：正则表达式\n基础正则表达式速查表 正则表达式可视化工具 常用正则表达式示例 在线测试正则表达式：Regular expression tester\n","permalink":"https://www.yunyitang.me/zh/blog/tech/regular-expression/","summary":"认知始于 Excel，不知道终于哪儿。 介绍与应用 属性：用于匹配和操作文本的工具 设计思想：用一种描述性的语言来给字符串定义一个规则，凡是符合规则","title":"正则表达式"},{"content":" 因为实习兼职的公司用R，温习如下，示例取自此项目。\n可视化libraries library(readr) library(ggplot2) library(dplyr) 导入数据 将csv导入dataset Read datasets/confirmed_cases_worldwide.csv into confirmed_cases_worldwide 选择部分数据 # Filter for China, from Feb 15 china_after_feb15 \u0026lt;- confirmed_cases_china_vs_world %\u0026gt;% filter(is_china == \u0026#34;China\u0026#34;, date \u0026gt;= \u0026#34;2020-02-15\u0026#34;) 画图 单组数据 # Draw a line plot of cumulative cases vs. date # Label the y-axis ggplot(confirmed_cases_worldwide, aes(date, cum_cases)) + geom_line() + ylab(\u0026#34;Cumulative confirmed cases\u0026#34;) 多组数据 # Using confirmed_cases_top7_outside_china, draw a line plot of # cum_cases vs. date, colored by country ggplot(confirmed_cases_top7_outside_china, aes(date, cum_cases, color = country)) + geom_line() + ylab(\u0026#34;Cumulative confirmed cases\u0026#34;) 趋势曲线 # Modify the plot to use a logarithmic scale on the y-axis plt_not_china_trend_lin + scale_y_log10() `geom_smooth()` using formula \u0026#39;y ~ x\u0026#39; R语言练习：https://swirlstats.com/faq.html\n","permalink":"https://www.yunyitang.me/zh/blog/tech/r-visualising/","summary":"因为实习兼职的公司用R，温习如下，示例取自此项目。 可视化libraries library(readr) library(ggplot2) library(dplyr) 导入数据 将csv导入dataset Read datasets/confirmed_cases_worldwide.csv into confirmed_cases_worldwide 选择部分数据 # Filter for","title":"R 可视化"},{"content":"在日常工作中，合适的效率工具能帮助我们快速完成工作，起到事半功倍的效果。\n下面是我常用的一些软件，个人用起来比较得心应手，推荐给大家。按照软件用途主要分为三大类：\n办公/写作软件， 开发软件 和系统软件。 由于日常工作的关系，相关软件仅限于Mac平台，其他系统平台如Windows可能不一定有对应的版本。\n具体软件清单如下表所示：\n办公/写作软件 序号 名称 说明 1 Safari 浏览器 2 Google Chrome 浏览器 3 Microsoft Office Word, Excel, PowerPoint, Outlook 4 Acrobat Reader PDF阅读器 5 hugo 开源静态站点生成器 6 Bandizip 解压缩工具 开发软件 序号 名称 说明 1 Node.js 尽量用LTS版本 2 Python 尽量用LTS版本 3 Git 代码管理 4 Visual Studio Code 业界良心 5 Fig 代码补全 6 Docker 容器化 系统软件 序号 名称 说明 1 RunCat 状态栏插件 ","permalink":"https://www.yunyitang.me/zh/blog/tech/common-software-list/","summary":"在日常工作中，合适的效率工具能帮助我们快速完成工作，起到事半功倍的效果。 下面是我常用的一些软件，个人用起来比较得心应手，推荐给大家。按照软件","title":"个人常用 MacOS 软件清单"},{"content":"饮食男女 Eat Drink Man Woman / 飲食男女\n至暗时刻 Darkest Hour / 黑暗对峙(港) / 最黑暗的时刻(台) \u003c!DOCTYPE HTML\u003e 国王的演讲 The King\u0026rsquo;s Speech / 皇上无话儿(港) / 王者之声：宣战时刻(台)\n普罗米修斯 Prometheus / 异形前传 / 异形前传：普罗米修斯\n走出非洲 Out of Africa / 非洲之旅(港) / 远离非洲(台)\n隐藏人物 Hidden Figures / NASA无名英雌(港) / 关键少数(台)\n旺卡 Wonka\n鲸 The Whale / 庞然大物 / 我的鲸鱼老爸(台)\n大鱼 Big Fish / 大鱼奇缘(港) / 大智若鱼(台)\n婚姻故事 Marriage Story \u003c!DOCTYPE HTML\u003e 伊蒂 Edie / 伊蒂\n","permalink":"https://www.yunyitang.me/zh/blog/life/dec-film/","summary":"饮食男女 Eat Drink Man Woman / 飲食男女 至暗时刻 Darkest Hour / 黑暗对峙(港) / 最黑暗的时刻(台) \u003c!DOCTYPE HTML\u003e 国王的演讲 The King\u0026rsquo;s Speech / 皇上无话儿(港) / 王者之声：宣战时刻(台) 普","title":"十二月在看"},{"content":" YUNYI IS CURRENTLY READING\nThe Body Keeps the Score Mind, Brain and Body in the Transformation of Trauma\nby Bessel van der Kolk\n冬牧场 作者：李娟, Jack Hargreaves (Translator), and Yan Yan (Translator)\n\u0026lsquo;Encouraged by her neighbors, Li decides to join a family of Kazakh herders as they take their 30 boisterous camels, 500 sheep, and over 100 cattle and horses to pasture for the winter.\u0026rsquo; It\u0026rsquo;s a cold lonely journey but also a warm family journey into the freezing-cold Kazakh winter pasture. It\u0026rsquo;s amazing that her words bring me so vividly into the unfamiliar Kazakh land in a cold winter in the hot summer when I first finished reading it, and I feel eager to reread it in an actually cold winter now. Her words are like snow, seemingly weightless, but silently nourishing the earth. Life and talent have given Juan a unique sense of perception of the Kazakh world.\n","permalink":"https://www.yunyitang.me/zh/blog/life/nov-book/","summary":"YUNYI IS CURRENTLY READING The Body Keeps the Score Mind, Brain and Body in the Transformation of Trauma by Bessel van der Kolk 冬牧场 作者：李娟, Jack Hargreaves (Translator), and Yan Yan (Translator) \u0026lsquo;Encouraged by her neighbors, Li decides to join a family of Kazakh herders as they take their 30 boisterous camels, 500 sheep, and over 100 cattle and horses to pasture for","title":"十一月在读"},{"content":"时空恋旅人 About Time / 回到最爱的一天(港) / 真爱每一天(台)\n饥饿游戏：鸣鸟与蛇之歌 The Ballad of Songbirds and Snakes / 饥饿游戏：鸣鸟与蛇的歌谣 / 饥饿游戏前传：鸣鸟与灵蛇之歌(港)\n天使爱美丽 Le fabuleux destin d\u0026rsquo;Amélie Poulain / 艾蜜莉的异想世界(台) / 天使艾米莉\n奈德 Nyad / 尼亚德 / 泳不放弃(台)\nAI创世者 The Creator / A.I.创世者(台) / 造物主\n","permalink":"https://www.yunyitang.me/zh/blog/life/nov-film/","summary":"时空恋旅人 About Time / 回到最爱的一天(港) / 真爱每一天(台) 饥饿游戏：鸣鸟与蛇之歌 The Ballad of Songbirds and Snakes / 饥饿游戏：鸣鸟与蛇的歌谣 / 饥饿游戏前传：鸣鸟与灵蛇","title":"十一月在看"},{"content":"关于博主 class Me: def __init__(self): self.name = \u0026#34;Yunyi Tang\u0026#34; self.prefer_name = \u0026#34;Yunyi\u0026#34; self.born_year = 1998 self.MBTI = INFJ self.hometown = \u0026#34;Guangzhou, Guangdong, CN\u0026#34; self.curr_location = \u0026#34;Bristol, UK\u0026#34; self.grad_school = \u0026#34;uBristol\u0026#34; self.undergrad_school = \u0026#34;SDU\u0026#34; 关于本站 本站通过 Hugo 的 PaperMod 生成，并托管在 Github Pages 上； 本站图标来自 Evangelion: 3.0 You Can (Not) Redo； 本站评论系统为 twikoo； 本站源代码采用 MIT 许可证，用户生成内容采用 CC BY-NC-SA 4.0 许可证； 留言板 ","permalink":"https://www.yunyitang.me/zh/about/","summary":"关于博主 class Me: def __init__(self): self.name = \u0026#34;Yunyi Tang\u0026#34; self.prefer_name = \u0026#34;Yunyi\u0026#34; self.born_year = 1998 self.MBTI = INFJ self.hometown = \u0026#34;Guangzhou, Guangdong, CN\u0026#34; self.curr_location = \u0026#34;Bristol, UK\u0026#34; self.grad_school = \u0026#34;uBristol\u0026#34; self.undergrad_school = \u0026#34;SDU\u0026#34; 关于本站 本站通过 Hugo 的 PaperMod 生成，并托管在 Github Pages 上； 本站图标来自 Evangelion: 3.0 You Can (Not) R","title":"你好 👋🏼"},{"content":"个人项目 个人网站 Nov. 2023 至 今, HTML / CSS / JavaScript\nGithub: https://github.com/yunyit/yunyit.github.io\n这个网页是基于Hugo的PaperMod主题。 基于MongoDB和Vercel部署twikoo评论系统。 COVID-19视觉化分析 Jul. 2022, R\nDataCamp workspace: https://app.datacamp.com/workspace/w/980fb8cc-bfa9-4071-aea3-ca8b1e3a95a8/edit\n使用R语言可视化COVID-19疫情爆发最初几周的数据。 学术项目 系统综述 Prevalence of antibiotic prescribing in COVID-19 patients in China and other low- and middle-income countries during the pandemic (December 2019-March 2021): a systematic review and meta-analysis\nOct. 2023, EndNote / Microsoft Excel\nDOI: https://doi.org/10.1093/jac/dkad302\n作者：Wenjuan Cong, Hung-Yuan Cheng, Beth Stuart, Binjuan Liu, Yunyi Tang, Yi Wang, Nour AIhusein, Hexing Wang, Amit Manchundiya, Helen Lambert 本研究对 2019 年 12 月至 2021 年 3 月期间中国和其他低收入国家和地区 COVID-19 患者的抗生素处方率进行了回顾和分析，结果显示，在这些环境中，COVID-19 患者的抗生素使用规模仍然令人担忧。 Antibiotic Use and Bacterial Infection in COVID-19 Patients in the Second Phase of the SARS-CoV-2 Pandemic: A Scoping Review\nJul. 2022, EndNote / Microsoft Excel\nDOI: https://doi.org/10.3390/antibiotics11080991\n作者：Wenjuan Cong, Beth Stuart, Nour AI Husein, Binjuan Liu, Yunyi Tang, Hexing Wang, Amit Manchundiya, Helen Lambert 本范围性综述旨在从 2020 年 6 月至 2021 年 3 月期间发表的研究中，探讨 COVID-19 患者中全球抗生素使用和细菌感染的流行程度和模式。 ","permalink":"https://www.yunyitang.me/zh/project/","summary":"个人项目 个人网站 Nov. 2023 至 今, HTML / CSS / JavaScript Github: https://github.com/yunyit/yunyit.github.io 这个网页是基于Hugo的PaperMod主题。 基于MongoDB和Vercel部署twikoo评论系","title":"项目"},{"content":" 在这个独立博客式微的时代，友情链接的意义是什么？\n和 Medium、简书之类的写作平台不同，每一个独立博客都是一个信息孤岛。我们没有类似「你可能喜欢其他人写的这些文章」的推荐机制，所以除了搜索引擎、社交网络引荐之外，我们应该还需要通过某种方法将这些信息孤岛连接起来：\n交换友情链接就是一种很棒的架桥方式。\n—— 摘自 PRIN BLOG\n交个朋友吧 👋🏼 本站的友链格式和 Yunyi 的友链信息如下所示，欢迎通过 评论区 交换友链！\nname=\u0026#34;Yunyi\u0026#39;s Blog\u0026#34; url=\u0026#34;https://www.yunyitang.me/zh/\u0026#34; avatar=\u0026#34;https://www.yunyitang.me/img/Avatar.png\u0026#34; desc=\u0026#34;Little squirrel Hopping around\u0026#34; 友链交换须知:\nSELECT * FROM Links WHERE blog = \u0026#39;正常安全网址，稳定域名，不要接入广告，尽量定期更新\u0026#39;; 本站会根据 uptimerobot 的检测结果判断友链的可访问性，不可访问的友链会被移动至“无法访问”栏目；如果连续长时间不可访问，则该友链会被隐藏，直至可正常访问。 友情链接 以下站点按照添加的时间顺序排列：\nBarney’s Blog All the truth is simple 豆豆 / Amos 无限进步.✍️ Bing\u0026#39;s Blog 自由 分享 合作 L1nSn0w\u0026#39;s Blog 无限进步.✍️ Cynosura Trying to light up the dark. Empty SEKAI 一只游荡在无人 SEKAI 的小白葱 Aiar\u0026#39;s Site 愿余生所有的珍惜，都不用失去来懂得。 思宁HERE 设计与生活 新世界的大门 悟已往之不諫，知來者之可追 PRIN BLOG 半吊子全栈开发者的日常 Chawye Hsu Personal Website of Chawye Hsu Say My Name Kunyang Xie 米米的博客 米米的博客！！ nopdan\u0026#39;s blog 但知行好事，莫要问前程 芝士部落格 有思想，也有忧伤和理想 野生糖喵 好伙伴们在哪里~ Project RC Richard Chien Dejavu\u0026#39;s Blog Not for success, just for growing. 绒绒洛 俯いたまま大人になって lvbibir\u0026#39;s Blog life is a fucking movie 友链会定期清理，如果出现没有互关、网站无法访问、内容违法等情况会删除。如有我忘记添加友链的小伙伴，请及时留言给我！\n本次清理友链时间为 2024-01-12，预计三个月清理一次!\n","permalink":"https://www.yunyitang.me/zh/links/","summary":"在这个独立博客式微的时代，友情链接的意义是什么？ 和 Medium、简书之类的写作平台不同，每一个独立博客都是一个信息孤岛。我们没有类似「你可能","title":"友情链接"},{"content":" 2022-09-21 基于 Ghost 的 yunyi-tang.ghost.io 启用。\n2022-09-26 域名更新为 yunyitang.me，购自 Google Domain。\n2023-11-1 Ghost 订阅结束，yunyi-tang.ghost.io 停用。\n2023-11-7 迁移至 Github Pages（yunyit.github.io），域名 yunyitang.me 与 yunyi-tang.ghost.io 解绑。\n2023-11-9 博客引擎迁移至 Hugo 的 PaperMod 主题，因工作所在地在英，同时开设 中文 与 英文 页面。\n2023-12-20 基于 MongoDB 和 Vercel 部署 twikoo 评论系统，通过测试。\n2024-01-02 更新网站图标为 开源emoji，并添加 知识共享协议（CC BY-NC-SA 4.0 DEED）脚注。\n2024-01-05 添加 标签页，并在页首添加相应链接。\n2024-01-06 使用 Google Search Console 和 Bing Webmaster Tools 进行搜索优化，百度搜索优化 进行中。\n2024-01-07 优化 GitHub Pages site with HTTPS。\n2024-01-08 在中文页面添加 归档（Archives）。\n2024-01-10 启用 uptimerobot 判断友链可访问性；限制文章最多显示 5 个 tag；添加 umami 流量统计并添加于页脚。\n2024-01-14 中文页面更换为 Home-Info Mode，增加博文的主页展示面积，并在 PaperMod 模板 的基础上添加网站头像；评论系统更新为 Disqus。\n2024-01-16 配合 Hugo 更新 改用 Hugo 内置的 Chroma 调整代码高亮，选用 trac 并将主题中所有 #bb8844 配色更换为 陶瓷红 #E16723 以配合本站的 超链接配色；评论系统改用 gitcus。\n待实现功能 豆瓣卡片； 工具栏； UptimeRobot API； 注意事项 本站所有技术内容均为个人观点，不保证正确。随着时间变化部分技术内容也可能会失效，请读者自行甄别。\n此外，如非特别标注，本站使用配图都多源于网络，如有侵权，请联系我删除。\n","permalink":"https://www.yunyitang.me/zh/log/","summary":"2022-09-21 基于 Ghost 的 yunyi-tang.ghost.io 启用。 2022-09-26 域名更新为 yunyitang.me，购自 Google Domain。 2023-11-1 Ghost 订阅结束，yunyi-tang.ghost.io 停用。 2023-11-7 迁移","title":"建站日志"},{"content":" “我生活在妙不可言的等待中，等待随便哪种未来”\n“我生活在妙不可言的等待中，等待随便哪种未来“，这是纪德在《地粮》里的一句话，也是我收到单向历的包装上的一句话。在这个充满变数的2020年，这句话突然显得有些适合，用来总结这个2020年。\n写2020年的年末回顾比2019年更难下笔，可能因为新冠疫情还环绕着我们，单纯个人的快乐和失落已经难以形容2020年了。从未感觉自己本科的社会人类学训练在眼前的思虑中如此真实，我们什么时候不是生活在这个社会之中呢？\n但若把眼光拉回身边，还是有很多可以细细掰扯的回忆。\n写2019年回顾的时候，我还很心虚、很着急、很没有着落，和现在的感觉不太一样。可能因为国内公历年末没有休假，而英国正好在圣诞连着元旦休冬假；也可能因为升学的复杂心情，混杂着一年到尾回头看的怅然，和现在还坐在一个新的旅程的起点，心情略有不同。\n就像我在12月开头回看一年前写的那样，“我无法回去安慰那时候的自己，抱住她描述会安心的明天。那时候最大的动力就是畅想博士生活，畅想我在英格兰一个西南的海港城市开始四年的研究生活，会有导师，会有一年做田野，会有机会做交叉项目，我会做一个好奇而活泼的疯子。但我无法回去安慰那时候的自己，我只能安慰现在的自己，by the end of this year, I will finally survive 2020, we all will.”\n幸好，我survive了，成为了幸存到2020年末的幸运儿。相较于许多没有度过漫长寒冬的鲜活生命，我只是幸运了。像朋友说的那样，我们可能还是进入了“后疫情时代”，生活不可逆地改变了，我们会继续拥抱生活的不确定性吗？我们有能力拥抱生活的不确定性吗？\n除了生命意义上的survive，回答自己在12月初的期待，生活上我也survive了这一学期、这一年。在紧张地申请与等待之后，我有惊无险地开始了博士第一年的第一个学期，并用一个小小symposium的名次给自己的第一学年画上逗号。\n在新的城市认识了新的朋友，在新的钢筋森林里找到了新的散心绿地，这些大概都回应了上半年焦虑的自己最美好的期待。所以，我很珍惜现在手里的时间。\n年初的自己，从济南到广州到香港，最后再回到广州，一路处理完了期末、雅思、递交申请、面试和继续网申。我几乎没有在相机和手机留下什么影像。\n但是，这些都因为疫情爆发，改变了节奏。也因为当时的心情太真实，也因为怕自己遗忘，我在惊魂未定的那阵子买了很多纸质杂志，因为“真正的新闻，是历史的底稿，这些印在纸上的文与图，是留给时间的物证“。\n在申请暂告一段落之后，一边挽救自己无法补充实地田野的毕业论文，我一边和朋友久违地在广州聚会。我们去了久未开张的影院，也在远走他乡之前饱尝鲜美的海鲜粤菜。\n毕业、告别、旅行、升学、搬家，一切的回忆，都收束在现在回想2020年的我手里。\n我曾畅想，“2020”这样数字规整的年份会怎样度过。而一开始的各种遐想，都不是年末看到的这样。\n但我还是个盲目乐观的人。或是说，我对未来悲观，以至于我可以坦然接受大多数好或不好的事情发生。所以我选了这句话，“我生活在妙不可言的等待中，等待随便哪种未来”，作为这篇草草写就的年末回顾的标题。\n是的，我还会在这里，等待随便哪种未来。\n预祝读到这里的你新年快乐；）\n","permalink":"https://www.yunyitang.me/zh/blog/life/2020/","summary":"“我生活在妙不可言的等待中，等待随便哪种未来” “我生活在妙不可言的等待中，等待随便哪种未来“，这是纪德在《地粮》里的一句话，也是我收到单向历","title":"2020 年终总结"},{"content":" 在记忆干枯前描绘2019\n当作课间休息，这个年终总结一点点地在键盘敲打出来。\n每到写年终总结都是我最心虚的时候。一是因为一个学年都是秋起夏终，冬天的年末远远不是松口气的时候。二是今年适逢升学，茫然，也仅仅能遥想一年后的自己会在哪里，给自己打打气。不过还是有个小小的信念：整理好过去，会更有信心面对下一年，所以我写下了我对2019的回忆。\n回到2019年的一月，我甩掉几门期末，干掉一次雅思，拉着大行李箱就去了美国。威斯康辛的大雪让我半个学期都看不见绿色草木，让我连续停了三次周二的晚课，也让我体会了在冰面溜冰玩儿是什么感觉。现在回想起四个月的交换时间还是有点恍惚，就像一场有点夸张的梦。北京已经两三次雪了，济南还会再下一次雪吗？\n我是个总不甘寂寞的人，说好听点就是跳出舒适圈（平时也不舒适啊？），说不好听点就是三分钟热度。交换的学期满足了我的很多好奇和贪玩儿，也或多或少有实质性收获。然后我在夏天还去了背山面水的港中文，而目前又在紧张地准备研究生申请。\n尽管一年到头都一头沉在自己的忙兮兮里，但是我从来离不了我的朋友们。在b村对着窗外的鹅毛大雪，我和Valerie点了暖呼呼的茶叶蛋一起赶作业；在深夜无人的Java Joint，Vy和我聊到困了回去睡觉，还在临走前几晚一边说着自己的焦虑一边安慰对方；和Peggy在一起我有了勇气去解决让我不安的烦恼，还吃了很多很多顿早午晚饭；和Yu我去听了人生第一场OOR的live，在Milwaukee的冷风里排了6个小时的队；和Sihan和Jack他们周五不知道聊啥天，然后周六一起去吃早饭，临走还一起通宵一个个送走回国的朋友；在Sherry的帮助下，办了第一次小小的摄影展，还留下了一张powerhouse的照片在学校里，回想起来还像是梦一样的体验；很多一起上课的朋友们，背景各异，生活各异，在上课一起头疼犯困（？），还会在party偶遇（哈）；还有到现在都没见面过的铮玥小姐姐哈哈哈哈，苍天她在我行前帮忙解答了多少疑惑，还在一个发现不能多留一个学期失落的晚上跨着时差慢慢聊天。回想起这段时间，我总是停不住又臭又长地流水账，生怕放过任何一个稍有遗忘的瞬间，谢谢你们爱你们。\n同时真心地感谢我的父母，容许我这样折腾，养了一个过于活泼的女儿辛苦你们了，希望爸妈新的一年也身体健康。\n在跨着时差和一群朋友错峰聊天后，在大家终于陆续实习完回到济南后，一群朋友们终于聚餐了。不知道怎么形容，总之就是一群人，天天在聊天，偶尔吃个饭，差不多这样，真奇怪？\n下半年乏善可陈，只剩下了补课和升学，怎么和去年年末这么像哈哈哈？今年在一门课里有机会去田野，觉得挺幸福的，在田野里可以当工具人的那种幸福？大概在喜欢的方向上还有很远的路要走，预祝在考研/工作/升学路上的各位同行人新的一年里平安顺利。\nIt was the best of times, it was the worst of times, it was the age of wisdom, it was the age of foolishness, it was the epoch of belief, it was the epoch of incredulity, it was the season of Light, it was the season of Darkness, it was the spring of hope, it was the winter of despair, we had everything before us, we had nothing before us, we were all going direct to Heaven, we were all going direct the other way.\n\u0026ndash; in short, the period was so far like the present period, that some of its noisiest authorities insisted on its being received, for good or for evil, in the superlative degree of comparison only.\n《双城记》这段话放在每个年关都那么适合？\n每个人都在自己的苦乐中倒腾，社会也在肮脏和洁白中翻滚，冷感的和热情的都会被祝福和伤害。希望身边的和远方的人，新的一年能和自己及自己以外的好好相处，到明年的这个时候，还能哭出来和笑出来。\n让我们去“温柔地推翻这个世界”。\n预祝读到这里的你新年快乐：）\n","permalink":"https://www.yunyitang.me/zh/blog/life/2019/","summary":"在记忆干枯前描绘2019 当作课间休息，这个年终总结一点点地在键盘敲打出来。 每到写年终总结都是我最心虚的时候。一是因为一个学年都是秋起夏终，冬","title":"2019 年终总结"},{"content":" 原链：豆瓣笔记\n首先，利益相关，谷歌全家桶吹，科技产品苦手。\n其次，整理出来的意思当然不是说，国内相关软件的目标就是完美模仿谷歌，这太ummm了。但为了自己使用方便，作为用户的我暂时也找功能上的替代品方便使用，应该不是太糟糕的选择吧。\n最后，现在能想到的是个人目前的使用体验。因为并没有广撒网地尝试过很多软件，所以只是找到合适的就用着了，暂时没有不适合的感觉就没有换新的。食用愉快！\n涉及的两个软件和用来替换使用的功能如下：\n滴答清单日历版面——谷歌日历（滴答清单看板版面——Trello） 石墨文档——谷歌文档、表格 一开始最先找到的是 【石墨文档】 https://shimo.im/welcome，用以替换谷歌文档的在线编辑和同步保存功能，个人有时会用上表格的功能，暂时没有用上它团队相关的功能。没有氪金。\n方便的是，石墨文档的编辑器功能用得很顺畅，页面设计很简洁。以这篇整理为例，我就是用石墨文档写的，链接如右https://shimo.im/docs/yxCkCVTV9DRHp8Y9/ 。与谷歌文档试用习惯相仿的是，因为它是多平台可用的，在不想背手提电脑出门的时候，可以在平板用，或者在可以找到的公共电脑登录试用。\n有所不同的是，谷歌文档和其他工具的组合试用，比如邮件和drive，是石墨文档无法替代使用的功能。不过，在身边大部分人的使用习惯都不涉及这两个联动功能的时候，没有这两个功能也暂时没有实质上的不便。另外有个使用不便的是，安卓端的编辑不算很方便，也暂时不能横屏使用，对贫穷的安卓平板不是很友好；和客服也说过了，希望日后会有功能改进吧。\n同类的其他线上编辑和团队编辑软件，没有用过所以不方便比较。不过随便一搜，能找到很多这方面的比较贴。（btw，更新的时候发现石墨的思维导图也可以用bullet point的形式编辑，或许幕布准备淘汰了。）\n最近出于对电子日历时间轴计划的执念，找到了 【滴答清单】 https://www.dida365.com/about/features，用它的日历版面（会员功能）替换谷歌日历使用，并尝试了打卡，也在用它的看板模式（电脑端）替换Trello试用着，试用会员中。\n日历方面基本可以完全胜任，就是使用感还是有些累赘，可能因为它是从清单软件发展过来的？感觉滴答清单很贪心，把番茄时钟、打卡、清单、日历、Trello的功能都涵盖了。不好是累赘，而反过来好是可以各取所需。比如，我的申请计划就适合用它的看板模式（Trello），分成不同类别，个人感觉比打tag方便；而雅思复习计划，个人就更偏好在日历时间轴（周页面）里塞时间段任务。这样能把不同时间规划偏好塞在一个软件里，也算是大杂烩的一种好处吧。\n本来在用的纸质计划本也还在用着，一是纸制品情结，二是作没有网的情况的应急。\n只是很粗浅的近期体验，会在使用过程中继续更新。\n","permalink":"https://www.yunyitang.me/zh/blog/tech/google-2019/","summary":"原链：豆瓣笔记 首先，利益相关，谷歌全家桶吹，科技产品苦手。 其次，整理出来的意思当然不是说，国内相关软件的目标就是完美模仿谷歌，这太ummm了","title":"谷歌套件替换使用状况"}]