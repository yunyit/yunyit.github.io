<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Data on Yunyi&#39;s Blog</title>
    <link>https://www.yunyitang.me/zh/tags/data/</link>
    <description>Recent content in Data on Yunyi&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sat, 13 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.yunyitang.me/zh/tags/data/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>YAML 数据结构和语法</title>
      <link>https://www.yunyitang.me/zh/blog/tech/ymal/</link>
      <pubDate>Sat, 13 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://www.yunyitang.me/zh/blog/tech/ymal/</guid>
      <description>认知始于 Markdown 文件，不知道终于哪儿。 定义 YAML Ain&amp;rsquo;t a Markup Language / Yet Another Markup Language 文件后缀：.yml 或 .yaml 注释：井号 或 哈希符号 # 结构：映射或列表，遵循层次结构，具体取决</description>
      <content:encoded><![CDATA[<blockquote>
<p>认知始于 Markdown 文件，不知道终于哪儿。</p>
</blockquote>
<h1 id="定义">定义</h1>
<blockquote>
<p>YAML Ain&rsquo;t a Markup Language / Yet Another Markup Language</p>
</blockquote>
<p>文件后缀：<code>.yml</code> 或 <code>.yaml</code></p>
<p>注释：井号 或 哈希符号 <code>#</code></p>
<p>结构：映射或列表，遵循层次结构，具体取决于缩进以及定义键值的方式。</p>
<p>语法：</p>
<ul>
<li>大小写敏感；</li>
<li>使用缩进表示层级关系；</li>
<li>缩进时不允许使用 <code>Tab</code> 键，只允许使用空格；</li>
<li>缩进的空格数目不重要，只要相同层级的元素左侧对齐即可；</li>
</ul>
<h1 id="应用">应用</h1>
<p>配置文件 configuration files -</p>
<h2 id="yaml--json">YAML / JSON</h2>
<p>相比 JSON，因为 YAML 有更好的可读性，对用户更友好，所以通常建议用 YAML 来编写配置文件，尽管它们在大多数情况下可以互换使用。</p>
<h1 id="数据类型">数据类型</h1>
<ul>
<li>对象 mapping/hash/dictionary：键值对的集合；</li>
<li>数组 sequence/list：一组按次序排列的值；数组和对象可以构成复合结构；</li>
<li>纯量：最基本的，不可再分的值；</li>
</ul>
<h2 id="对象">对象</h2>
<p>对象的一组键值对，使用冒号结构表示。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">animal</span><span class="p">:</span><span class="w"> </span><span class="l">pets</span><span class="w">
</span></span></span></code></pre></div><p>转为 JavaScript 如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-JavaScript" data-lang="JavaScript"><span class="line"><span class="cl"><span class="p">{</span> <span class="nx">animal</span><span class="o">:</span> <span class="s1">&#39;pets&#39;</span> <span class="p">}</span>
</span></span></code></pre></div><p>Yaml 也允许另一种写法，将所有键值对写成一个行内对象。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="nt">hash</span><span class="p">:</span><span class="w"> </span>{<span class="w"> </span><span class="nt">name: Steve, foo</span><span class="p">:</span><span class="w"> </span><span class="l">bar } </span><span class="w">
</span></span></span></code></pre></div><p>转为 JavaScript 如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-JavaScript" data-lang="JavaScript"><span class="line"><span class="cl"><span class="p">{</span> <span class="nx">hash</span><span class="o">:</span> <span class="p">{</span> <span class="nx">name</span><span class="o">:</span> <span class="s1">&#39;Steve&#39;</span><span class="p">,</span> <span class="nx">foo</span><span class="o">:</span> <span class="s1">&#39;bar&#39;</span> <span class="p">}</span> <span class="p">}</span>
</span></span></code></pre></div><h2 id="数组">数组</h2>
<p>一组连词线开头的行，构成一个数组。</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl">- <span class="l">Cat</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="l">Dog</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span>- <span class="l">Goldfish</span><span class="w">
</span></span></span></code></pre></div><p>转为 JavaScript 如下：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-JavaScript" data-lang="JavaScript"><span class="line"><span class="cl"><span class="p">[</span> <span class="s1">&#39;Cat&#39;</span><span class="p">,</span> <span class="s1">&#39;Dog&#39;</span><span class="p">,</span> <span class="s1">&#39;Goldfish&#39;</span> <span class="p">]</span>
</span></span></code></pre></div><h2 id="纯量">纯量</h2>
<p>纯量是最基本的、不可再分的值。</p>
<p>以下数据类型都属于 JavaScript 的纯量：</p>
<ul>
<li>字符串</li>
<li>布尔值</li>
<li>整数</li>
<li>浮点数</li>
<li><code>null</code>：用 <code>~</code> 表示</li>
<li>时间</li>
<li>日期</li>
</ul>
<h1 id="复合结构">复合结构</h1>
<p>对象和数组可以结合使用，形成复合结构。</p>
<h2 id="示例">示例</h2>
<p>选自 <a href="https://www.redhat.com/en/topics/automation/what-is-yaml" target="_blank" rel="noopener" style="color:#E16723";>Red Hat</a> 的学生信息例子：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-yaml" data-lang="yaml"><span class="line"><span class="cl"><span class="c">#Comment: Student record</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="c">#Describes some characteristics and preferences</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nn">---</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">name</span><span class="p">:</span><span class="w"> </span><span class="l">Martin D&#39;vloper</span><span class="w"> </span><span class="c">#key-value</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">age</span><span class="p">:</span><span class="w"> </span><span class="m">26</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">hobbies</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">painting</span><span class="w"> </span><span class="c">#first list item</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">playing_music</span><span class="w"> </span><span class="c">#second list item</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="l">cooking</span><span class="w"> </span><span class="c">#third list item</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">programming_languages</span><span class="p">:</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">java</span><span class="p">:</span><span class="w"> </span><span class="l">Intermediate</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">python</span><span class="p">:</span><span class="w"> </span><span class="l">Advanced</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="nt">javascript</span><span class="p">:</span><span class="w"> </span><span class="l">Beginner</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="nt">favorite_food</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">vegetables</span><span class="p">:</span><span class="w"> </span><span class="l">tomatoes </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span>- <span class="nt">fruits</span><span class="p">:</span><span class="w"> 
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">citrics</span><span class="p">:</span><span class="w"> </span><span class="l">oranges </span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">tropical</span><span class="p">:</span><span class="w"> </span><span class="l">bananas</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">nuts</span><span class="p">:</span><span class="w"> </span><span class="l">peanuts</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">      </span><span class="nt">sweets</span><span class="p">:</span><span class="w"> </span><span class="l">raisins</span><span class="w">
</span></span></span></code></pre></div><p>使用 Python 的 PyYAML 库，可转化为：</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-python" data-lang="python"><span class="line"><span class="cl"><span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;name&#34;</span><span class="p">:</span> <span class="s2">&#34;Martin D&#39;vloper&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;age&#34;</span><span class="p">:</span> <span class="mi">26</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;hobbies&#34;</span><span class="p">:</span> <span class="p">[</span><span class="s2">&#34;painting&#34;</span><span class="p">,</span> <span class="s2">&#34;playing_music&#34;</span><span class="p">,</span> <span class="s2">&#34;cooking&#34;</span><span class="p">],</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;programming_languages&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;java&#34;</span><span class="p">:</span> <span class="s2">&#34;Intermediate&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;python&#34;</span><span class="p">:</span> <span class="s2">&#34;Advanced&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">            <span class="s2">&#34;javascript&#34;</span><span class="p">:</span> <span class="s2">&#34;Beginner&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">        <span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;favorite_food&#34;</span><span class="p">:</span> <span class="p">[</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span><span class="s2">&#34;vegetables&#34;</span><span class="p">:</span> <span class="s2">&#34;tomatoes&#34;</span><span class="p">},</span>
</span></span><span class="line"><span class="cl">            <span class="p">{</span>
</span></span><span class="line"><span class="cl">                <span class="s2">&#34;fruits&#34;</span><span class="p">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;citrics&#34;</span><span class="p">:</span> <span class="s2">&#34;oranges&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;tropical&#34;</span><span class="p">:</span> <span class="s2">&#34;bananas&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;nuts&#34;</span><span class="p">:</span> <span class="s2">&#34;peanuts&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                    <span class="s2">&#34;sweets&#34;</span><span class="p">:</span> <span class="s2">&#34;raisins&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">                <span class="p">}</span>
</span></span><span class="line"><span class="cl">            <span class="p">},</span>
</span></span><span class="line"><span class="cl">        <span class="p">],</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">]</span>
</span></span></code></pre></div><h1 id="相关阅读">相关阅读</h1>
<ul>
<li><a href="https://hugo.bnblogs.cc" target="_blank" rel="noopener" style="color:#E16723";>Barney</a> 的 <a href="https://hugo.bnblogs.cc/yaml%e8%af%ad%e6%b3%95/" target="_blank" rel="noopener" style="color:#E16723";>yaml 语法</a> 整理；</li>
<li><a href="https://www.ruanyifeng.com/blog/" target="_blank" rel="noopener" style="color:#E16723";>阮一峰</a> 的 <a href="https://www.ruanyifeng.com/blog/2016/07/yaml.html" target="_blank" rel="noopener" style="color:#E16723";>YAML 语言教程</a>；</li>
<li><a href="https://yaml.org/spec/1.2.2/" target="_blank" rel="noopener" style="color:#E16723";>YAML 1.2 规格</a>；</li>
</ul>
]]></content:encoded>
    </item>
    <item>
      <title>2023 年终总结</title>
      <link>https://www.yunyitang.me/zh/blog/life/2023/</link>
      <pubDate>Thu, 11 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://www.yunyitang.me/zh/blog/life/2023/</guid>
      <description>博客建设 2023 年底把博客从 Ghost 搬到了 Github Pages，动手照着教程 Hugo + PaperMod搭建技术博客 做了一个静态网页做博客，重心放在技术学习整理、以输出</description>
      <content:encoded><![CDATA[<h1 id="博客建设">博客建设</h1>
<p>2023 年底把博客从 Ghost 搬到了 <a href="https://pages.cloudflare.com/" target="_blank" rel="noopener" style="color:#E16723";>Github Pages</a>，动手照着教程 <a href="https://kyxie.github.io/zh/blog/tech/papermod/" target="_blank" rel="noopener" style="color:#E16723";>Hugo + PaperMod搭建技术博客</a> 做了一个静态网页做博客，重心放在技术学习整理、以输出促输入、费曼学习法。</p>
<p>一开始照本宣科做中英一式两份的个人网站，后来随着扩展友链、多读多看，加之自己在英工作，逐渐调整了个站中英页面的各自侧重：英文页面有求职相关，博客更新不及中文页面多，主页保持 portfolio 的简洁；中文页面则更侧重博客输出，主页的页头页尾也更丰富一点。</p>
<p>在扩展 <a href="https://www.yunyitang.me/zh/links/" target="_blank" rel="noopener" style="color:#E16723";>友链</a> 的过程中，向各位大佬们也学习了很多，感受到了独立博客的丰富，受益于大家分享的真诚，并且越来越能体会阮一峰老师的话：</p>
<blockquote>
<p>“对我来说，博客首先是一种知识管理工具，其次才是传播工具。我的技术文章，主要用来整理我还不懂的知识。我只写那些我还没有完全掌握的东西，那些我精通的东西，往往没有动力写。炫耀从来不是我的动机，好奇才是。”</p>
</blockquote>
<h1 id="工作变化和感受">工作变化和感受</h1>
<p>今年最松一口气的变化，就是我的 <a href="https://research-information.bris.ac.uk/en/persons/yunyi-tang-2/studentTheses/" target="_blank" rel="noopener" style="color:#E16723";>硕士论文</a> 终于通过了！从一开始读博的跌跌撞撞，到第一年审核不过的焦虑难受，再到之后转为研究型硕士项目的守得云开见月明，很感谢导师、家人和朋友们的支持和陪伴。拿到学位也保证了后续的签证申请，留英工作的计划也清晰了许多。</p>
<p>科研之余的实习也有了不少进展，在 <a href="https://www.180dc.org/branches/Bristol" target="_blank" rel="noopener" style="color:#E16723";>180DC</a> 的数据科学项目进入到项目的第二阶段，去年的领队忙于毕业、把这轮项目的领队交给了我。虽然不比队里各位 Robotics 的博士生们技术精湛，但基于项目前一轮和客户交流的经验，加一些细心，算是把此项目收尾了。</p>
<p>最意外的收获是开始了在 <a href="https://www.zap-map.com/" target="_blank" rel="noopener" style="color:#E16723";>Zapmap</a> 的数据兼职。从一开始比较打杂，到现在虽然也打杂、但更多参与公司会议了解业务动向、多到办公室和大家交流、旁观学习，甚至还去 Christmas Party 狠玩了一把，也算是把一个一开始的小机会利用到自己力所能及的最大值。虽说初创公司要看融资来决定下一步的人事变化，能否在现在合同结束后留下了全职工作还两说，但在 <a href="https://www.zap-map.com/" target="_blank" rel="noopener" style="color:#E16723";>Zapmap</a> 经历的、学习了解到的都对从本科开始就没有工作经历、一路读书到现在的我多有助益。</p>
<h1 id="技术成长">技术成长</h1>
<p>在导师提醒我“不能从一个硕士项目中只想着用尽学尽自己想要的技术/工具”之后，我放下了把 <a href="https://research-information.bris.ac.uk/en/persons/yunyi-tang-2/studentTheses/" target="_blank" rel="noopener" style="color:#E16723";>硕士论文</a> 的数据分析做得花里胡哨的执念，只在完成本职（<a href="https://research-information.bris.ac.uk/en/persons/yunyi-tang-2/publications/" target="_blank" rel="noopener" style="color:#E16723";>科研</a>）之余，多接触、多自学、多尝试。但对于自己更倾向于数据分析、还是网站开发，一直没有很清晰的想法。</p>
<p>有时候感觉像忙头苍蝇无方向，但有时又相信积少成多、前路会越来越明晰，也多亏能在 <a href="https://www.zap-map.com/" target="_blank" rel="noopener" style="color:#E16723";>Zapmap</a> 工作多感受体会，才不至于像考虑转硕那样焦躁茫然。而在秋天生活变故之后，我有意无意多着力用时于自己，加上少了担心毕业论文的压力，顺着技术博客做感觉还不错。</p>
<h1 id="今年计划完成度">今年计划完成度</h1>
<p>连续两年年底都过得不易，也一直没什么“年度计划”。姑且回头看的话，今年过得确实比去年年底的悲观好多了，感到幸运的远多于感到遗憾的，也算是完成自己的期待吧！</p>
<h1 id="明年的全年计划">明年的全年计划</h1>
<p>明年主要解决什么问题？有什么想做的？围绕生活、技术、工作：</p>
<ul>
<li>多出门徒步，开始尝试多日徒步；</li>
<li>多和家人朋友通话联络；</li>
<li>保持博客每月两篇以上的输出；</li>
<li>增加基础技术知识的学习和输出；</li>
<li>开始第一份全职工作；</li>
</ul>
<h1 id="相关阅读">相关阅读</h1>
<p>各节标题参考了 <a href="https://imcbc.cn/" target="_blank" rel="noopener" style="color:#E16723";>冰冰大佬</a> 前年的 <a href="https://imcbc.cn/202212/2022-summary/" target="_blank" rel="noopener" style="color:#E16723";>2022年终总结</a>，更多大家的 2023 年终总结可翻阅 <a href="https://github.com/saveweb/review-2023" target="_blank" rel="noopener" style="color:#E16723";>此合集</a>。</p>
]]></content:encoded>
    </item>
    <item>
      <title>Obsidian 自定义工作笔记</title>
      <link>https://www.yunyitang.me/zh/blog/tech/obsedian/</link>
      <pubDate>Tue, 09 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://www.yunyitang.me/zh/blog/tech/obsedian/</guid>
      <description>启用日期：2024-01-09 应用场景：工作笔记 自定义：荷叶绿 HEYELV #1A6840 RGB(26, 104, 64)；字体 JetBrains Mono 常用功能属性 Templater Dataview tags YAML 分类方法 标签：PARA + 工作内容 1-projects</description>
      <content:encoded><![CDATA[<blockquote>
<p>启用日期：2024-01-09</p>
</blockquote>
<blockquote>
<p>应用场景：工作笔记</p>
</blockquote>
<blockquote>
<p>自定义：<!-- raw HTML omitted -->荷叶绿<!-- raw HTML omitted --> HEYELV #1A6840 RGB(26, 104, 64)；字体 <a href="https://www.jetbrains.com/lp/mono/" target="_blank" rel="noopener" style="color:#E16723";>JetBrains Mono</a></p>
</blockquote>
<h1 id="常用功能属性">常用功能属性</h1>
<ul>
<li>Templater</li>
<li>Dataview</li>
<li>tags</li>
<li>YAML</li>
</ul>
<h1 id="分类方法">分类方法</h1>
<p>标签：PARA + 工作内容</p>
<ul>
<li>1-projects</li>
<li>2-areas</li>
<li>3-resources</li>
<li>4-archives</li>
<li>zapmap</li>
</ul>
<blockquote>
<p>同样的分类方法我也应用于系统便签本的归类。</p>
</blockquote>
<h1 id="安装插件">安装插件</h1>
<table>
<thead>
<tr>
<th>插件</th>
<th>主要功能</th>
<th>相关阅读</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="obsidian://show-plugin?id=dataview">Dataview</a></td>
<td>数据库查询</td>
<td><a href="https://pkmer.cn/Pkmer-Docs/10-obsidian/obsidian%e7%a4%be%e5%8c%ba%e6%8f%92%e4%bb%b6/dataview/dataview%e5%9f%ba%e6%9c%ac%e8%af%ad%e6%b3%95/31---dql-%e4%b8%8e-sql-%e7%9a%84%e5%bc%82%e5%90%8c/" target="_blank" rel="noopener" style="color:#E16723";>Dataview 中的 DQL 与 SQL 的区别</a></td>
</tr>
<tr>
<td><a href="obsidian://show-plugin?id=nldates-obsidian">Natural Language Dates</a></td>
<td>通过自然语言生成日期</td>
<td></td>
</tr>
<tr>
<td><a href="obsidian://show-plugin?id=periodic-notes">Perodic Dates</a></td>
<td>按日期单位汇总笔记</td>
<td></td>
</tr>
<tr>
<td><a href="obsidian://show-plugin?id=smart-random-note">Smart Random Notes</a></td>
<td>随机挑选一篇笔记阅读</td>
<td></td>
</tr>
<tr>
<td><a href="obsidian://show-plugin?id=templater-obsidian">Templater</a></td>
<td>模版指令</td>
<td></td>
</tr>
<tr>
<td><a href="obsidian://show-plugin?id=various-complements">Various Complements</a></td>
<td>自动补全</td>
<td></td>
</tr>
</tbody>
</table>
<h1 id="其他相关阅读">其他相关阅读</h1>
<p><a href="https://stdrc.cc" target="_blank" rel="noopener" style="color:#E16723";>RC</a> 总结的 <a href="https://stdrc.cc/style-guides/chinese" target="_blank" rel="noopener" style="color:#E16723";>中文写作风格指南</a>。</p>
]]></content:encoded>
    </item>
    <item>
      <title>JSON</title>
      <link>https://www.yunyitang.me/zh/blog/tech/json/</link>
      <pubDate>Sat, 06 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://www.yunyitang.me/zh/blog/tech/json/</guid>
      <description>在实习公司的数据岗位还挺常用的。 定义 JavaScript Object Notation - { &amp;#34;key&amp;#34;: &amp;#34;value&amp;#34;, &amp;#34;key2&amp;#34;: &amp;#34;value2&amp;#34; } 网络传输中常使用的格式：以节省内存和传输所用的网络带宽 {&amp;#34;key&amp;#34;:&amp;#34;value&amp;#34;,&amp;#34;key2&amp;#34;:&amp;#34;value2&amp;#34;} 数据类型 文本/字符串 Strings { &amp;#34;key&amp;#34;: &amp;#34;value&amp;#34;</description>
      <content:encoded><![CDATA[<blockquote>
<p>在实习公司的数据岗位还挺常用的。</p>
</blockquote>
<h1 id="定义">定义</h1>
<p>JavaScript Object Notation -</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-JavaScript" data-lang="JavaScript"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;key&#34;</span><span class="o">:</span> <span class="s2">&#34;value&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;key2&#34;</span><span class="o">:</span> <span class="s2">&#34;value2&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><p>网络传输中常使用的格式：以节省内存和传输所用的网络带宽</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-JavaScript" data-lang="JavaScript"><span class="line"><span class="cl"><span class="p">{</span><span class="s2">&#34;key&#34;</span><span class="o">:</span><span class="s2">&#34;value&#34;</span><span class="p">,</span><span class="s2">&#34;key2&#34;</span><span class="o">:</span><span class="s2">&#34;value2&#34;</span><span class="p">}</span>
</span></span></code></pre></div><h1 id="数据类型">数据类型</h1>
<h2 id="文本字符串-strings">文本/字符串 Strings</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-JavaScript" data-lang="JavaScript"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;key&#34;</span><span class="o">:</span> <span class="s2">&#34;value&#34;</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h2 id="数字-numbers">数字 Numbers</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-JavaScript" data-lang="JavaScript"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;key&#34;</span><span class="o">:</span> <span class="mf">123.</span> <span class="mi">456</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><ul>
<li>弱类型语言：没有长度限制</li>
<li>强类型语言：根据取数类型</li>
</ul>
<h2 id="对象-objects">对象 Objects</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-JavaScript" data-lang="JavaScript"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;key&#34;</span><span class="o">:</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;key2&#34;</span><span class="o">:</span> <span class="s2">&#34;value2&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">    <span class="s2">&#34;key3&#34;</span><span class="o">:</span> <span class="s2">&#34;value3&#34;</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h2 id="数组-arrays">数组 Arrays</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-JavaScript" data-lang="JavaScript"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;key&#34;</span><span class="o">:</span> <span class="p">[</span><span class="mi">123</span><span class="p">,</span> <span class="mi">456</span><span class="p">,</span> <span class="mf">7.89</span><span class="p">];</span> <span class="c1">//数字
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="s2">&#34;key2&#34;</span><span class="o">:</span> <span class="p">[</span><span class="s2">&#34;今天&#34;</span><span class="p">,</span> <span class="s2">&#34;天气&#34;</span><span class="p">,</span> <span class="s2">&#34;不错&#34;</span><span class="p">];</span> <span class="c1">//字符串
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="s2">&#34;key3&#34;</span><span class="o">:</span>  <span class="p">[</span>
</span></span><span class="line"><span class="cl">    <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;name&#34;</span><span class="o">:</span> <span class="s2">&#34;0&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;age&#34;</span><span class="o">:</span> <span class="s2">&#34;1&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">},{</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;name&#34;</span><span class="o">:</span> <span class="s2">&#34;a&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;age&#34;</span><span class="o">:</span> <span class="s2">&#34;2&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">},{</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;name&#34;</span><span class="o">:</span> <span class="s2">&#34;b&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">      <span class="s2">&#34;age&#34;</span><span class="o">:</span> <span class="s2">&#34;3&#34;</span>
</span></span><span class="line"><span class="cl">    <span class="p">}</span>
</span></span><span class="line"><span class="cl">  <span class="p">]</span> <span class="c1">//对象
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="p">}</span> 
</span></span></code></pre></div><h2 id="null">null</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-JavaScript" data-lang="JavaScript"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;key&#34;</span><span class="o">:</span> <span class="kc">null</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></div><h1 id="取值方式">取值方式</h1>
<p>根据不同编程语言具体不同：
相应 function 后加</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-JavaScript" data-lang="JavaScript"><span class="line"><span class="cl"><span class="nx">key</span><span class="p">.</span><span class="nx">key3</span>
</span></span></code></pre></div><p>或</p>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-JavaScript" data-lang="JavaScript"><span class="line"><span class="cl"><span class="nx">key</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">name</span>
</span></span></code></pre></div><h1 id="应用">应用</h1>
<ol>
<li>广泛应用于前后端的数据交换；</li>
<li>配置文件的格式，如VS Code；</li>
</ol>
<h2 id="类似的其他数据交换格式">类似的其他数据交换格式</h2>
<ul>
<li>YMAL</li>
<li>XML</li>
<li>PROPERTIES</li>
<li>&hellip;</li>
</ul>
<h2 id="json的优点">JSON的优点</h2>
<ol>
<li>语法简单，易读易写；</li>
<li>简洁，易于计算机解析；</li>
</ol>
]]></content:encoded>
    </item>
    <item>
      <title>正则表达式基础知识点</title>
      <link>https://www.yunyitang.me/zh/blog/tech/regular-expression/</link>
      <pubDate>Sat, 06 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://www.yunyitang.me/zh/blog/tech/regular-expression/</guid>
      <description>认知始于 Excel，不知道终于哪儿。 介绍与应用 属性：用于匹配和操作文本的工具 设计思想：用一种描述性的语言来给字符串定义一个规则，凡是符合规则</description>
      <content:encoded><![CDATA[<blockquote>
<p>认知始于 Excel，不知道终于哪儿。</p>
</blockquote>
<h1 id="介绍与应用">介绍与应用</h1>
<p>属性：用于匹配和操作文本的工具</p>
<p>设计思想：用一种描述性的语言来给字符串定义一个规则，凡是符合规则的字符串，为“匹配”，反之，不“匹配”。</p>
<p>应用场景：</p>
<ul>
<li>文本查找</li>
<li>文本替换</li>
<li>文本格式校验</li>
<li>&hellip;</li>
</ul>
<p>应用环境：大多数编程语言的标准库包含正则表达式的支持</p>
<ul>
<li>Python</li>
<li>SQL</li>
<li>Javascript</li>
<li>Word, Excel&hellip;</li>
</ul>
<h1 id="语法">语法</h1>
<h2 id="普通字符">普通字符</h2>
<p>明确的关键字：在正则表达式中直接写即可</p>
<ul>
<li>文字字符：英文字母、中文、数字</li>
<li>符号：@ % _ 等等</li>
</ul>
<h3 id="特殊字符">特殊字符</h3>
<p>一些有特殊含义的字符若要匹配，必须首先使字符&quot;转义&quot;，即将反斜杠字符 ``` 放在它们前面。</p>
<table>
<thead>
<tr>
<th>特殊字符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>$</code></td>
<td>匹配输入字符串的结尾位置</td>
</tr>
<tr>
<td><code>()</code></td>
<td>标记一个子表达式的开始和结束位置</td>
</tr>
<tr>
<td><code>*</code></td>
<td>匹配前面的子表达式零次或多次</td>
</tr>
<tr>
<td><code>+</code></td>
<td>匹配前面的子表达式一次或多次</td>
</tr>
<tr>
<td><code>[</code></td>
<td>标记一个中括号表达式的开始</td>
</tr>
<tr>
<td><code>?</code></td>
<td>匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。</td>
</tr>
<tr>
<td><code>\</code></td>
<td>将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符</td>
</tr>
<tr>
<td><code>^</code></td>
<td>匹配输入字符串的开始位置，除非在方括号表达式中使用，当该符号在方括号表达式中使用时，表示不接受该方括号表达式中的字符集合。</td>
</tr>
<tr>
<td><code>{</code></td>
<td>标记限定符表达式的开始</td>
</tr>
<tr>
<td><code>|</code></td>
<td>指明两项之间的一个选择</td>
</tr>
</tbody>
</table>
<h3 id="非打印字符">非打印字符</h3>
<table>
<thead>
<tr>
<th>字符</th>
<th>描述</th>
<th>等效</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>\cx</code></td>
<td>匹配由x指明的控制字符</td>
<td></td>
</tr>
<tr>
<td><code>\f</code></td>
<td>匹配一个换页符</td>
<td><code>\x0c</code> 和 <code>\cL</code></td>
</tr>
<tr>
<td><code>\n</code></td>
<td>匹配一个换行符</td>
<td><code>\x0a</code> 和 <code>\cJ</code></td>
</tr>
<tr>
<td><code>\r</code></td>
<td>匹配一个回车符</td>
<td><code>\x0d</code> 和 <code>\cM</code></td>
</tr>
<tr>
<td><code>\s</code></td>
<td>匹配任何空白字符，包括空格、制表符、换页符等等。</td>
<td><code>\f</code> <code>\n</code> <code>\r</code> <code>\t</code> <code>\v</code></td>
</tr>
<tr>
<td><code>\S</code></td>
<td>匹配任何非空白字符</td>
<td><code>^</code> <code>\f</code> <code>\n</code> <code>\r</code> <code>\t</code> <code>\v</code></td>
</tr>
<tr>
<td><code>\t</code></td>
<td>匹配一个制表符</td>
<td><code>\x09</code> 和 <code>\cI</code></td>
</tr>
<tr>
<td><code>\v</code></td>
<td>匹配一个垂直制表符</td>
<td><code>\x0b</code> 和 <code>\cK</code></td>
</tr>
</tbody>
</table>
<p>不需要记住，可用时查。</p>
<h2 id="字符集合">字符集合</h2>
<p>单个关键字的值范围，包含在一对 <code>[]</code> 中间。</p>
<p>应用：</p>
<ul>
<li>明确某个字符的范围的模糊匹配
<ul>
<li>如果差异不仅仅在一个字符上，则不适合采用字符集合 -&gt; 应采用<a href="#%e5%ad%90%e8%a1%a8%e8%be%be%e5%bc%8f">子表达式</a></li>
</ul>
</li>
<li>可以简化的连续值范围：使用 <code>-</code> 符号</li>
<li>字符集合为排除在外的值：使 <code>^</code> 符号</li>
</ul>
<h2 id="限定符定位符">限定符、定位符</h2>
<h3 id="限定符">限定符</h3>
<p>给前一个字符追加限定范围</p>
<table>
<thead>
<tr>
<th>常用限定符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>*</code></td>
<td>前面的字符/子表达式出现0次或多次</td>
</tr>
<tr>
<td><code>+</code></td>
<td>前面的字符/子表达式出现1次或多次</td>
</tr>
<tr>
<td><code>#</code></td>
<td>前面的字符/子表达式出现0次或1次</td>
</tr>
<tr>
<td><code>{}</code></td>
<td>前面的字符/子表达式出现具体{}次</td>
</tr>
</tbody>
</table>
<p>注意：前面为模糊匹配范围时，会出现“贪婪匹配”的问题 &ndash; 默认情况下，正则表达式会匹配尽量多的字符 &ndash; 可通过添加 <code>?</code> 实现<a href="https://www.liaoxuefeng.com/wiki/1252599548343744/1306046731649057" target="_blank" rel="noopener" style="color:#E16723";>非贪婪匹配</a>。</p>
<h3 id="定位符">定位符</h3>
<p>标记匹配位置的元字符 - 只有4个：</p>
<table>
<thead>
<tr>
<th>定位符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>^</code></td>
<td>字符串开始的位置</td>
</tr>
<tr>
<td><code>$</code></td>
<td>字符串结尾的位置</td>
</tr>
<tr>
<td><code>\b</code></td>
<td>单词边界 - 字符与空格间的位置</td>
</tr>
<tr>
<td><code>\B</code></td>
<td>非单词边界</td>
</tr>
</tbody>
</table>
<h2 id="子表达式">子表达式</h2>
<p>内嵌的子正则表达式，包含在一对 <code>()</code> 中，可以看作是一个整体。</p>
<ul>
<li>与正则表达式语法相同；</li>
<li>允许子表达式内嵌套子表达式；</li>
<li>用 <code>|</code> 分割多个子表达式/多种情况；</li>
<li>可以标记子匹配项，如 <code>([a-z])\1([a-z])\2</code> 匹配 <code>aabb ... cczz</code>；</li>
<li>子表达式的匹配结果会单独存储，如希望不存储，可以添加 <code>?:</code>（在日常表达中不太常用）；</li>
<li>可作为预查匹配项/自定义的<a href="#%e5%ae%9a%e4%bd%8d%e7%ac%a6">定位符</a>；</li>
</ul>
<h2 id="省略符修饰符">省略符、修饰符</h2>
<h3 id="省略符">省略符</h3>
<p>为了简化正则表达式的元字符，以 <code>\</code> 开头。</p>
<table>
<thead>
<tr>
<th>字符</th>
<th>描述</th>
<th>等效</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>.</code></td>
<td>匹配除换行符（<code>\n</code>、<code>\r</code>）之外的任何单个字符</td>
<td><code>[^\n\r]</code></td>
</tr>
<tr>
<td><code>\d</code></td>
<td>匹配一个数字字符</td>
<td><code>[0-9]</code></td>
</tr>
<tr>
<td><code>\D</code></td>
<td>匹配一个非数字字符</td>
<td><code>[^0-9]</code></td>
</tr>
<tr>
<td><code>\s</code></td>
<td>匹配所有空白符，包括空格、制表符、换页符等。</td>
<td><code>[\f\n\r\t\v]</code></td>
</tr>
<tr>
<td><code>\S</code></td>
<td>匹配所有非空白符</td>
<td><code>[^\f\n\r\t\v]</code></td>
</tr>
<tr>
<td><code>\w</code></td>
<td>匹配一个字母、数字、下划线字符</td>
<td><code>[A-Za-z0-9_]</code></td>
</tr>
<tr>
<td><code>\W</code></td>
<td>匹配一个非字母、数字、下划线字符</td>
<td><code>[^A-Za-z0-9_]</code></td>
</tr>
</tbody>
</table>
<p>每个省略符都有替代方案，所以不必强求记忆。</p>
<h3 id="修饰符">修饰符</h3>
<p>严格意义上不是正则表达式的一部分，是指定匹配策略的，可叠加使用。</p>
<table>
<thead>
<tr>
<th>常规修饰符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>i</code></td>
<td>ignore - 不区分大小写</td>
</tr>
<tr>
<td><code>g</code></td>
<td>global - 全局匹配</td>
</tr>
<tr>
<td><code>m</code></td>
<td>multi-line - 多行匹配</td>
</tr>
<tr>
<td><code>s</code></td>
<td>默认情况下的圆点 <code>.</code> 是匹配除换行符 <code>\n</code> 之外的任何字符，加上 <code>s</code> 修饰符之后, <code>.</code> 中包含换行符 <code>\n</code>。</td>
</tr>
</tbody>
</table>
<p>某些正则表达式的代码库可能存在特别的修饰符。</p>
<p>有些软件虽支持正则表达式搜索，但不一定开放修饰符的设置。</p>
<h1 id="记不住语法的解决方案">记不住语法的解决方案</h1>
<p>正则表达式元字符手册：<a href="https://www.r2coding.com/#/README?id=%e6%ad%a3%e5%88%99%e8%a1%a8%e8%be%be%e5%bc%8f" target="_blank" rel="noopener" style="color:#E16723";>Road To Coding：正则表达式</a></p>
<ul>
<li><a href="https://www.r2coding.com/#/README?id=%e5%9f%ba%e7%a1%80%e6%ad%a3%e5%88%99%e8%a1%a8%e8%be%be%e5%bc%8f%e9%80%9f%e6%9f%a5%e8%a1%a8" target="_blank" rel="noopener" style="color:#E16723";>基础正则表达式速查表</a></li>
<li><a href="https://www.r2coding.com/#/README?id=%e6%ad%a3%e5%88%99%e8%a1%a8%e8%be%be%e5%bc%8f%e5%8f%af%e8%a7%86%e5%8c%96%e5%b7%a5%e5%85%b7" target="_blank" rel="noopener" style="color:#E16723";>正则表达式可视化工具</a></li>
<li><a href="https://www.r2coding.com/#/README?id=%e5%b8%b8%e7%94%a8%e6%ad%a3%e5%88%99%e8%a1%a8%e8%be%be%e5%bc%8f%e7%a4%ba%e4%be%8b" target="_blank" rel="noopener" style="color:#E16723";>常用正则表达式示例</a></li>
</ul>
<p>在线测试正则表达式：<a href="https://regex101.com" target="_blank" rel="noopener" style="color:#E16723";>Regular expression tester</a></p>
]]></content:encoded>
    </item>
    <item>
      <title>R 语言 ggplot2 和 dplyr 可视化分析</title>
      <link>https://www.yunyitang.me/zh/blog/tech/r-visualising/</link>
      <pubDate>Fri, 05 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://www.yunyitang.me/zh/blog/tech/r-visualising/</guid>
      <description>因为实习兼职的公司用R，温习如下，示例取自此项目。 可视化libraries library(readr) library(ggplot2) library(dplyr) 导入数据 将csv导入dataset Read datasets/confirmed_cases_worldwide.csv into confirmed_cases_worldwide 选择部分数据 # Filter for</description>
      <content:encoded><![CDATA[<blockquote>
<p>因为实习兼职的公司用R，温习如下，示例取自<a href="https://app.datacamp.com/workspace/w/980fb8cc-bfa9-4071-aea3-ca8b1e3a95a8/edit" target="_blank" rel="noopener" style="color:#E16723";>此项目</a>。</p>
</blockquote>
<h1 id="可视化libraries">可视化libraries</h1>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-R" data-lang="R"><span class="line"><span class="cl"><span class="nf">library</span><span class="p">(</span><span class="n">readr</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">library</span><span class="p">(</span><span class="n">ggplot2</span><span class="p">)</span>
</span></span><span class="line"><span class="cl"><span class="nf">library</span><span class="p">(</span><span class="n">dplyr</span><span class="p">)</span>
</span></span></code></pre></div><h1 id="导入数据">导入数据</h1>
<h2 id="将csv导入dataset">将csv导入dataset</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-R" data-lang="R"><span class="line"><span class="cl"><span class="n">Read</span> <span class="n">datasets</span><span class="o">/</span><span class="n">confirmed_cases_worldwide.csv</span> <span class="n">into</span> <span class="n">confirmed_cases_worldwide</span>
</span></span></code></pre></div><h2 id="选择部分数据">选择部分数据</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-R" data-lang="R"><span class="line"><span class="cl"><span class="c1"># Filter for China, from Feb 15</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">china_after_feb15</span> <span class="o">&lt;-</span> <span class="n">confirmed_cases_china_vs_world</span> <span class="o">%&gt;%</span>
</span></span><span class="line"><span class="cl">  <span class="nf">filter</span><span class="p">(</span><span class="n">is_china</span> <span class="o">==</span> <span class="s">&#34;China&#34;</span><span class="p">,</span> <span class="n">date</span> <span class="o">&gt;=</span> <span class="s">&#34;2020-02-15&#34;</span><span class="p">)</span>
</span></span></code></pre></div><h1 id="画图">画图</h1>
<h2 id="单组数据">单组数据</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-R" data-lang="R"><span class="line"><span class="cl"><span class="c1"># Draw a line plot of cumulative cases vs. date</span>
</span></span><span class="line"><span class="cl"><span class="c1"># Label the y-axis</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">ggplot</span><span class="p">(</span><span class="n">confirmed_cases_worldwide</span><span class="p">,</span> <span class="nf">aes</span><span class="p">(</span><span class="n">date</span><span class="p">,</span> <span class="n">cum_cases</span><span class="p">))</span> <span class="o">+</span>
</span></span><span class="line"><span class="cl">  <span class="nf">geom_line</span><span class="p">()</span> <span class="o">+</span>
</span></span><span class="line"><span class="cl">  <span class="nf">ylab</span><span class="p">(</span><span class="s">&#34;Cumulative confirmed cases&#34;</span><span class="p">)</span>
</span></span></code></pre></div><h2 id="多组数据">多组数据</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-R" data-lang="R"><span class="line"><span class="cl"><span class="c1"># Using confirmed_cases_top7_outside_china, draw a line plot of</span>
</span></span><span class="line"><span class="cl"><span class="c1"># cum_cases vs. date, colored by country</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">ggplot</span><span class="p">(</span><span class="n">confirmed_cases_top7_outside_china</span><span class="p">,</span> <span class="nf">aes</span><span class="p">(</span><span class="n">date</span><span class="p">,</span> <span class="n">cum_cases</span><span class="p">,</span> <span class="n">color</span> <span class="o">=</span> <span class="n">country</span><span class="p">))</span> <span class="o">+</span>
</span></span><span class="line"><span class="cl">  <span class="nf">geom_line</span><span class="p">()</span> <span class="o">+</span>
</span></span><span class="line"><span class="cl">  <span class="nf">ylab</span><span class="p">(</span><span class="s">&#34;Cumulative confirmed cases&#34;</span><span class="p">)</span>
</span></span></code></pre></div><h2 id="趋势曲线">趋势曲线</h2>
<div class="highlight"><pre tabindex="0" class="chroma"><code class="language-R" data-lang="R"><span class="line"><span class="cl"><span class="c1"># Modify the plot to use a logarithmic scale on the y-axis</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">plt_not_china_trend_lin</span> <span class="o">+</span>
</span></span><span class="line"><span class="cl">  <span class="nf">scale_y_log10</span><span class="p">()</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="nf">`geom_smooth</span><span class="p">()</span><span class="n">`</span> <span class="n">using</span> <span class="n">formula</span> <span class="s">&#39;y ~ x&#39;</span>
</span></span></code></pre></div><hr>
<p>R语言练习：https://swirlstats.com/faq.html</p>
]]></content:encoded>
    </item>
  </channel>
</rss>
