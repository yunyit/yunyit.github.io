<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SQL on Yunyi&#39;s Blog</title>
    <link>https://www.yunyitang.me/zh/tags/sql/</link>
    <description>Recent content in SQL on Yunyi&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sat, 06 Jan 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://www.yunyitang.me/zh/tags/sql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>正则表达式基础知识点</title>
      <link>https://www.yunyitang.me/zh/blog/tech/regular-expression/</link>
      <pubDate>Sat, 06 Jan 2024 00:00:00 +0000</pubDate>
      <guid>https://www.yunyitang.me/zh/blog/tech/regular-expression/</guid>
      <description>认知始于 Excel，不知道终于哪儿。 介绍与应用 属性：用于匹配和操作文本的工具 设计思想：用一种描述性的语言来给字符串定义一个规则，凡是符合规则</description>
      <content:encoded><![CDATA[<blockquote>
<p>认知始于 Excel，不知道终于哪儿。</p>
</blockquote>
<h1 id="介绍与应用">介绍与应用</h1>
<p>属性：用于匹配和操作文本的工具</p>
<p>设计思想：用一种描述性的语言来给字符串定义一个规则，凡是符合规则的字符串，为“匹配”，反之，不“匹配”。</p>
<p>应用场景：</p>
<ul>
<li>文本查找</li>
<li>文本替换</li>
<li>文本格式校验</li>
<li>&hellip;</li>
</ul>
<p>应用环境：大多数编程语言的标准库包含正则表达式的支持</p>
<ul>
<li>Python</li>
<li>SQL</li>
<li>Javascript</li>
<li>Word, Excel&hellip;</li>
</ul>
<h1 id="语法">语法</h1>
<h2 id="普通字符">普通字符</h2>
<p>明确的关键字：在正则表达式中直接写即可</p>
<ul>
<li>文字字符：英文字母、中文、数字</li>
<li>符号：@ % _ 等等</li>
</ul>
<h3 id="特殊字符">特殊字符</h3>
<p>一些有特殊含义的字符若要匹配，必须首先使字符&quot;转义&quot;，即将反斜杠字符 ``` 放在它们前面。</p>
<table>
<thead>
<tr>
<th>特殊字符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>$</code></td>
<td>匹配输入字符串的结尾位置</td>
</tr>
<tr>
<td><code>()</code></td>
<td>标记一个子表达式的开始和结束位置</td>
</tr>
<tr>
<td><code>*</code></td>
<td>匹配前面的子表达式零次或多次</td>
</tr>
<tr>
<td><code>+</code></td>
<td>匹配前面的子表达式一次或多次</td>
</tr>
<tr>
<td><code>[</code></td>
<td>标记一个中括号表达式的开始</td>
</tr>
<tr>
<td><code>?</code></td>
<td>匹配前面的子表达式零次或一次，或指明一个非贪婪限定符。</td>
</tr>
<tr>
<td><code>\</code></td>
<td>将下一个字符标记为或特殊字符、或原义字符、或向后引用、或八进制转义符</td>
</tr>
<tr>
<td><code>^</code></td>
<td>匹配输入字符串的开始位置，除非在方括号表达式中使用，当该符号在方括号表达式中使用时，表示不接受该方括号表达式中的字符集合。</td>
</tr>
<tr>
<td><code>{</code></td>
<td>标记限定符表达式的开始</td>
</tr>
<tr>
<td><code>|</code></td>
<td>指明两项之间的一个选择</td>
</tr>
</tbody>
</table>
<h3 id="非打印字符">非打印字符</h3>
<table>
<thead>
<tr>
<th>字符</th>
<th>描述</th>
<th>等效</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>\cx</code></td>
<td>匹配由x指明的控制字符</td>
<td></td>
</tr>
<tr>
<td><code>\f</code></td>
<td>匹配一个换页符</td>
<td><code>\x0c</code> 和 <code>\cL</code></td>
</tr>
<tr>
<td><code>\n</code></td>
<td>匹配一个换行符</td>
<td><code>\x0a</code> 和 <code>\cJ</code></td>
</tr>
<tr>
<td><code>\r</code></td>
<td>匹配一个回车符</td>
<td><code>\x0d</code> 和 <code>\cM</code></td>
</tr>
<tr>
<td><code>\s</code></td>
<td>匹配任何空白字符，包括空格、制表符、换页符等等。</td>
<td><code>\f</code> <code>\n</code> <code>\r</code> <code>\t</code> <code>\v</code></td>
</tr>
<tr>
<td><code>\S</code></td>
<td>匹配任何非空白字符</td>
<td><code>^</code> <code>\f</code> <code>\n</code> <code>\r</code> <code>\t</code> <code>\v</code></td>
</tr>
<tr>
<td><code>\t</code></td>
<td>匹配一个制表符</td>
<td><code>\x09</code> 和 <code>\cI</code></td>
</tr>
<tr>
<td><code>\v</code></td>
<td>匹配一个垂直制表符</td>
<td><code>\x0b</code> 和 <code>\cK</code></td>
</tr>
</tbody>
</table>
<p>不需要记住，可用时查。</p>
<h2 id="字符集合">字符集合</h2>
<p>单个关键字的值范围，包含在一对 <code>[]</code> 中间。</p>
<p>应用：</p>
<ul>
<li>明确某个字符的范围的模糊匹配
<ul>
<li>如果差异不仅仅在一个字符上，则不适合采用字符集合 -&gt; 应采用<a href="#%e5%ad%90%e8%a1%a8%e8%be%be%e5%bc%8f">子表达式</a></li>
</ul>
</li>
<li>可以简化的连续值范围：使用 <code>-</code> 符号</li>
<li>字符集合为排除在外的值：使 <code>^</code> 符号</li>
</ul>
<h2 id="限定符定位符">限定符、定位符</h2>
<h3 id="限定符">限定符</h3>
<p>给前一个字符追加限定范围</p>
<table>
<thead>
<tr>
<th>常用限定符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>*</code></td>
<td>前面的字符/子表达式出现0次或多次</td>
</tr>
<tr>
<td><code>+</code></td>
<td>前面的字符/子表达式出现1次或多次</td>
</tr>
<tr>
<td><code>#</code></td>
<td>前面的字符/子表达式出现0次或1次</td>
</tr>
<tr>
<td><code>{}</code></td>
<td>前面的字符/子表达式出现具体{}次</td>
</tr>
</tbody>
</table>
<p>注意：前面为模糊匹配范围时，会出现“贪婪匹配”的问题 &ndash; 默认情况下，正则表达式会匹配尽量多的字符 &ndash; 可通过添加 <code>?</code> 实现<a href="https://www.liaoxuefeng.com/wiki/1252599548343744/1306046731649057" target="_blank" rel="noopener" style="color:#E16723";>非贪婪匹配</a>。</p>
<h3 id="定位符">定位符</h3>
<p>标记匹配位置的元字符 - 只有4个：</p>
<table>
<thead>
<tr>
<th>定位符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>^</code></td>
<td>字符串开始的位置</td>
</tr>
<tr>
<td><code>$</code></td>
<td>字符串结尾的位置</td>
</tr>
<tr>
<td><code>\b</code></td>
<td>单词边界 - 字符与空格间的位置</td>
</tr>
<tr>
<td><code>\B</code></td>
<td>非单词边界</td>
</tr>
</tbody>
</table>
<h2 id="子表达式">子表达式</h2>
<p>内嵌的子正则表达式，包含在一对 <code>()</code> 中，可以看作是一个整体。</p>
<ul>
<li>与正则表达式语法相同；</li>
<li>允许子表达式内嵌套子表达式；</li>
<li>用 <code>|</code> 分割多个子表达式/多种情况；</li>
<li>可以标记子匹配项，如 <code>([a-z])\1([a-z])\2</code> 匹配 <code>aabb ... cczz</code>；</li>
<li>子表达式的匹配结果会单独存储，如希望不存储，可以添加 <code>?:</code>（在日常表达中不太常用）；</li>
<li>可作为预查匹配项/自定义的<a href="#%e5%ae%9a%e4%bd%8d%e7%ac%a6">定位符</a>；</li>
</ul>
<h2 id="省略符修饰符">省略符、修饰符</h2>
<h3 id="省略符">省略符</h3>
<p>为了简化正则表达式的元字符，以 <code>\</code> 开头。</p>
<table>
<thead>
<tr>
<th>字符</th>
<th>描述</th>
<th>等效</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>.</code></td>
<td>匹配除换行符（<code>\n</code>、<code>\r</code>）之外的任何单个字符</td>
<td><code>[^\n\r]</code></td>
</tr>
<tr>
<td><code>\d</code></td>
<td>匹配一个数字字符</td>
<td><code>[0-9]</code></td>
</tr>
<tr>
<td><code>\D</code></td>
<td>匹配一个非数字字符</td>
<td><code>[^0-9]</code></td>
</tr>
<tr>
<td><code>\s</code></td>
<td>匹配所有空白符，包括空格、制表符、换页符等。</td>
<td><code>[\f\n\r\t\v]</code></td>
</tr>
<tr>
<td><code>\S</code></td>
<td>匹配所有非空白符</td>
<td><code>[^\f\n\r\t\v]</code></td>
</tr>
<tr>
<td><code>\w</code></td>
<td>匹配一个字母、数字、下划线字符</td>
<td><code>[A-Za-z0-9_]</code></td>
</tr>
<tr>
<td><code>\W</code></td>
<td>匹配一个非字母、数字、下划线字符</td>
<td><code>[^A-Za-z0-9_]</code></td>
</tr>
</tbody>
</table>
<p>每个省略符都有替代方案，所以不必强求记忆。</p>
<h3 id="修饰符">修饰符</h3>
<p>严格意义上不是正则表达式的一部分，是指定匹配策略的，可叠加使用。</p>
<table>
<thead>
<tr>
<th>常规修饰符</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>i</code></td>
<td>ignore - 不区分大小写</td>
</tr>
<tr>
<td><code>g</code></td>
<td>global - 全局匹配</td>
</tr>
<tr>
<td><code>m</code></td>
<td>multi-line - 多行匹配</td>
</tr>
<tr>
<td><code>s</code></td>
<td>默认情况下的圆点 <code>.</code> 是匹配除换行符 <code>\n</code> 之外的任何字符，加上 <code>s</code> 修饰符之后, <code>.</code> 中包含换行符 <code>\n</code>。</td>
</tr>
</tbody>
</table>
<p>某些正则表达式的代码库可能存在特别的修饰符。</p>
<p>有些软件虽支持正则表达式搜索，但不一定开放修饰符的设置。</p>
<h1 id="记不住语法的解决方案">记不住语法的解决方案</h1>
<p>正则表达式元字符手册：<a href="https://www.r2coding.com/#/README?id=%e6%ad%a3%e5%88%99%e8%a1%a8%e8%be%be%e5%bc%8f" target="_blank" rel="noopener" style="color:#E16723";>Road To Coding：正则表达式</a></p>
<ul>
<li><a href="https://www.r2coding.com/#/README?id=%e5%9f%ba%e7%a1%80%e6%ad%a3%e5%88%99%e8%a1%a8%e8%be%be%e5%bc%8f%e9%80%9f%e6%9f%a5%e8%a1%a8" target="_blank" rel="noopener" style="color:#E16723";>基础正则表达式速查表</a></li>
<li><a href="https://www.r2coding.com/#/README?id=%e6%ad%a3%e5%88%99%e8%a1%a8%e8%be%be%e5%bc%8f%e5%8f%af%e8%a7%86%e5%8c%96%e5%b7%a5%e5%85%b7" target="_blank" rel="noopener" style="color:#E16723";>正则表达式可视化工具</a></li>
<li><a href="https://www.r2coding.com/#/README?id=%e5%b8%b8%e7%94%a8%e6%ad%a3%e5%88%99%e8%a1%a8%e8%be%be%e5%bc%8f%e7%a4%ba%e4%be%8b" target="_blank" rel="noopener" style="color:#E16723";>常用正则表达式示例</a></li>
</ul>
<p>在线测试正则表达式：<a href="https://regex101.com" target="_blank" rel="noopener" style="color:#E16723";>Regular expression tester</a></p>
]]></content:encoded>
    </item>
  </channel>
</rss>
